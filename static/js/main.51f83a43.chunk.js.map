{"version":3,"sources":["utils/Uint8ArrayUtils.ts","redux/hooks.ts","redux/state/app.ts","redux/thunk/fetchCounter.ts","redux/state/count.ts","redux/state/spinLogo.ts","redux/thunk/localStorage.ts","redux/thunk/app.ts","components/Common/Styled.tsx","redux/state/bitcoin.ts","utils/Base58Utils.ts","utils/BitcoinUtils.ts","components/SpinLogo/logo.svg","components/Bitcoin/Bitcoin.hooks.ts","components/Bitcoin/index.ts","components/Bitcoin/Bitcoin.tsx","utils/HTMLUtils.ts","components/ConfigPage/ConfigPage.tsx","components/ConfigPage/index.ts","components/ConfigPage/hooks.ts","components/Count/Count.tsx","components/Count/index.ts","components/HelpPage/index.ts","components/HelpPage/HelpPage.tsx","components/SiteMap/index.ts","components/SiteMap/SiteMap.tsx","components/SpinLogo/SpinLogo.tsx","components/SpinLogo/index.ts","components/WelcomePage/index.ts","components/WelcomePage/WelcomePage.tsx","components/Menu/MenuItems.tsx","components/AppBar/index.ts","components/AppBar/AppBar.tsx","components/Menu/index.ts","components/Menu/Menu.tsx","components/App/App.tsx","redux/store.ts","index.tsx"],"names":["Uint8ArrayToNumberArray","prm","result","forEach","value","push","useDispatch","dispatch","useSelector","selector","menuList","initialState","openMenu","component","undefined","appSlice","createSlice","name","reducers","setOpenMenu","state","action","payload","setComponent","parseJSON","JSON","parse","key","find","menu","actions","appReducer","reducer","judgment","percent","second","a","Promise","resolve","reject","setTimeout","Math","random","Error","fetchCounter","createAsyncThunk","arg","thunk","setProgress","catch","res","count","countSlice","message","progress","setShowingPercent","setMessasge","setCount","increment","decrement","incrementByAmount","extraReducers","builder","addCase","fetchLastCounter","pending","meta","fulfilled","rejected","countReducer","spinLogoSlice","spin","logoColor","setSpinLogo","setLogoColor","spinLogoReducer","localStorageKeyPrefix","localStorageKeyList","loadLocalStorage","localStorageKey","savedStateData","localStorage","getItem","countActions","spinLogoActions","saveLocalStorage","appState","setItem","stringify","countState","spinLogoState","clearLocalStorage","removeItem","init","appActions","DividedDiv","styled","div","WordWrapP","p","SitemapCard","Card","BitcoinSlice","publicKey","secretKey","bitcoinAddress","wif","setPublicKey","setSecretKey","setWif","setBitcoinAddress","BitcoinReducer","bytesToHex","uint8a","hex","i","length","toString","padStart","COMMON_B58_ALPHABET","alphabet","ipfs","btc","xmr","flickr","xrp","base58encode","prmSource","source","prmType","ype","toLowerCase","TextEncoder","encode","Uint8Array","split","map","c","charCodeAt","slice","hasOwnProperty","letters","x","BigInt","output","mod","Number","reverse","join","sha256","data","crypto","createHash","update","digest","base58WithChecksum","set","calcChecksum","genBitcoinAddress","sha256edpayload","ripemded160payload","_g","useBitcoinAddress","useCallback","privKey","msg","randomBytes","secp256k1","privateKeyVerify","pubKey","publicKeyCreate","sigObj","ecdsaSign","ecdsaVerify","signature","privateKey","genWif","Bitcoin","bitcoinState","shallowEqual","Button","color","onClick","variant","HTMLColorCodeRegex","GoodMarginTextField","TextField","NoMarginPaper","Paper","ConfigPage","useState","showColorPicker","setShowColorPicker","useShowColorPicker","Typography","error","test","label","onChange","element","currentTarget","required","type","Dialog","PaperComponent","onClose","open","FormControlLabel","control","Checkbox","checked","GoodWidthSlider","Slider","Count","id","disabled","max","min","e","newValue","valueLabelDisplay","CircularProgress","HelpPage","href","SiteMap","Box","sx","flexGrow","overflow","px","site","MenuItems","minWidth","maxWidth","CardContent","gutterBottom","fontSize","icon","description","CardActions","onKeyPress","size","_excluded","_extends","Object","assign","target","arguments","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","cx","cy","r","ForwardRef","RollingLogoKeyframes","keyframes","RollingLogo","Logo","SpinLogo","floor","WelcomePage","PlusOne","spinLogo","Autorenew","helpPage","Help","welcomePage","Home","configPage","Settings","siteMap","Map","bitcoin","Toll","AppBar","position","Toolbar","IconButton","edge","mr","Menu","Drawer","anchor","onKeyDown","role","List","ListItem","button","ListItemIcon","Cancel","ListItemText","primary","Divider","AppDiv","MainContents","App","React","useEffect","StrictMode","store","configureStore","bitcoinReducer","ReactDOM","render","document","getElementById"],"mappings":";qHAAA,YAIO,SAASA,EAAwBC,GACvC,IAAMC,EAAmB,GAEzB,OADAD,EAAIE,SAAQ,SAACC,GAAD,OAAWF,EAAOG,KAAKD,MAC5BF,EAPR,oC,+WCSaI,EAAc,kBAAMC,eACpBC,EAA+CC,I,iCCP/CC,EAAW,CACvB,cACA,QACA,WACA,UACA,aACA,UACA,YAeKC,EAAyB,CAC9BC,UAAU,EACVC,eAAWC,GAGNC,EAAWC,YAAY,CAC5BC,KAAM,MACNN,eACAO,SAAU,CACTC,YAAa,SAACC,EAAOC,GACpBD,EAAMR,SAAWS,EAAOC,SAEzBC,aAAc,SAACH,EAAOC,GACrBD,EAAMP,UAAYQ,EAAOC,SAE1BE,UAAW,SAACJ,EAAOC,GACjBD,EAAMP,UAAaH,EADgC,GAEpDe,KAAKC,MAAML,EAAOC,SAAS,SAACK,EAAKvB,GACpB,aAARuB,GAAuC,mBAAVvB,EAChCgB,EAAMR,SAAWR,EAET,cAARuB,GACAjB,EAASkB,MAAK,SAACC,GAAD,OAAUA,IAASzB,OAEjCgB,EAAMP,UAAYT,UAQR0B,EAAYf,EAAZe,QAGAC,EADIhB,EAASiB,Q,QChDtBC,EAAQ,uCAAG,WAAOC,EAAiBC,GAAxB,SAAAC,EAAA,+EAChB,IAAIC,SAAiB,SAACC,EAASC,GAC9BC,YAAW,WACNC,KAAKC,SAAWR,EAAU,KAC7BI,GAAQ,GAETC,EAAO,IAAII,SACA,IAATR,OAPY,2CAAH,wDA8BRS,EAAeC,YAGnB,kBAHmC,uCAGhB,WAAOC,EAAKC,GAAZ,eAAAX,EAAA,6DACpBW,EAAMxC,SAASuB,EAAQkB,aAAY,IADf,SAGFf,EAASa,EAAIZ,QAASY,EAAIX,QAAQc,OAAM,kBAAM,KAH5C,UAGdC,EAHc,OAKpBH,EAAMxC,SAASuB,EAAQkB,aAAY,KAE/BE,EAPgB,yCAQZ,CAAEC,MAAOL,EAAI1C,QARD,aAWd,IAAIuC,MAAM,qBAXI,2CAHgB,yDAiBtBC,ICpCTQ,EAAapC,YAAY,CAC9BC,KAAM,QACNN,aARkC,CAClC0C,QAAS,GACTC,UAAU,EACVH,MAAO,EACPjB,QAAS,IAKThB,SAAU,CAETqC,kBAAmB,SAACnC,EAAOC,GAC1BD,EAAMc,QAAUb,EAAOC,SAExB0B,YAAa,SAAC5B,EAAOC,GACpBD,EAAMkC,SAAWjC,EAAOC,SAEzBkC,YAAa,SAACpC,EAAOC,GACpBD,EAAMiC,QAAUhC,EAAOC,SAExBmC,SAAU,SAACrC,EAAOC,GACjBD,EAAM+B,MAAQ9B,EAAOC,SAEtBoC,UAAW,SAACtC,GACXA,EAAM+B,OAAS,GAEhBQ,UAAW,SAACvC,GACXA,EAAM+B,OAAS,GAEhBS,kBAAmB,SAACxC,EAAOC,GAC1BD,EAAM+B,OAAS9B,EAAOC,SAEvBE,UAAW,SAACJ,EAAOC,GAClBI,KAAKC,MAAML,EAAOC,SAAS,SAACK,EAAKvB,GACpB,UAARuB,GAAoC,kBAAVvB,EAC7BgB,EAAM+B,MAAQ/C,EACI,YAARuB,GAAsC,kBAAVvB,IACtCgB,EAAMc,QAAU9B,QAKpByD,cAAe,SAACC,GACfA,EAAQC,QAAQC,EAAiBC,SAAS,SAAC7C,EAAOC,GAAR,mBAAC,eACvCD,GADsC,IAEzCiC,QAAQ,uCAAD,OAAWhC,EAAO6C,KAAKpB,IAAIX,OAA3B,6BAAuCd,EAAO6C,KAAKpB,IAAIZ,QAAvD,oCAAsEb,EAAO6C,KAAKpB,IAAI1C,MAAtF,uCAER0D,EAAQC,QAAQC,EAAiBG,WAAW,SAAC/C,EAAOC,GAAR,mBAAC,eACzCD,GADwC,IAE3C+B,MAAO/B,EAAM+B,MAAQ9B,EAAOC,QAAQ6B,MACpCE,QAAQ,+DAAD,OAAehC,EAAOC,QAAQ6B,MAA9B,6CAERW,EAAQC,QAAQC,EAAiBI,UAAU,SAAChD,GAAD,mBAAC,eACxCA,GADuC,IAE1CiC,QAAS,oGACTF,MAAO/B,EAAM+B,MAAQ,UAMTrB,EAAYsB,EAAZtB,QAGAuC,EADMjB,EAAWpB,QChE1BsC,EAAgBtD,YAAY,CACjCC,KAAM,WACNN,aANmC,CACnC4D,MAAM,EACNC,UAAW,WAKXtD,SAAU,CACTuD,YAAa,SAACrD,EAAOC,GACpBD,EAAMmD,KAAOlD,EAAOC,SAErBoD,aAAc,SAACtD,EAAOC,GACrBD,EAAMoD,UAAYnD,EAAOC,SAE1BE,UAAW,SAACJ,EAAOC,GAClBI,KAAKC,MAAML,EAAOC,SAAS,SAACK,EAAKvB,GACpB,cAARuB,GAAwC,kBAAVvB,EACjCgB,EAAMoD,UAAYpE,EACA,SAARuB,GAAmC,mBAAVvB,IACnCgB,EAAMmD,KAAOnE,UAQH0B,EAAYwC,EAAZxC,QAGA6C,EADSL,EAActC,QC7BhC4C,EAAwB,eACxBC,EAAsB,CAAC,GAAD,OACxBD,EADwB,sBAExBA,EAFwB,wBAGxBA,EAHwB,kBAStBE,EAAmBjC,YACxB,gCADwC,uCAExC,WAAOC,EAAKC,GAAZ,SAAAX,EAAA,sDACC,CAAC,GAAD,OACIwC,EADJ,wBAEIA,EAFJ,kBAGEzE,SAAQ,SAAC4E,GAEV,IAAMC,EAAiBC,aAAaC,QAAQH,GACrB,OAAnBC,IAGAD,IAAe,UAAQH,EAAR,cAClB7B,EAAMxC,SAAS4E,EAAa3D,UAAUwD,IAC5BD,IAAe,UAAQH,EAAR,kBACzB7B,EAAMxC,SAAS6E,EAAgB5D,UAAUwD,QAb5C,2CAFwC,yDAwBnCK,EAAmBxC,YACxB,gCADwC,uCAExC,WAAOC,GAAP,SAAAV,EAAA,sDAEKU,EAAIwC,UACPL,aAAaM,QAAb,UACIX,EADJ,YAECnD,KAAK+D,UAAU1C,EAAIwC,WAGjBxC,EAAI2C,YACPR,aAAaM,QAAb,UACIX,EADJ,cAECnD,KAAK+D,UAAU1C,EAAI2C,aAGjB3C,EAAI4C,eACPT,aAAaM,QAAb,UACIX,EADJ,iBAECnD,KAAK+D,UAAU1C,EAAI4C,gBAjBtB,2CAFwC,uDA4BnCC,EAAoB9C,YACzB,gCADyC,sBAEzC,sBAAAT,EAAA,sDAECyC,EAAoB1E,SAAQ,SAAC4E,GAAD,OAC3BE,aAAaW,WAAWb,MAH1B,4CClEKc,EAAOhD,YACZ,gCAD4B,uCAE5B,WAAOC,EAAKC,GAAZ,SAAAX,EAAA,sDACCW,EAAMxC,SAASuF,EAAWvE,aAAab,EAAS,KAChDmE,EAAoB1E,SAAQ,SAAC4E,GAE5B,IAAMC,EAAiBC,aAAaC,QAAQH,GAEvCC,IAIDD,IAAe,UAAQH,EAAR,YAClB7B,EAAMxC,SAASuF,EAAWtE,UAAUwD,IAC1BD,IAAe,UAAQH,EAAR,cACzB7B,EAAMxC,SAAS4E,EAAa3D,UAAUwD,IAC5BD,IAAe,UAAQH,EAAR,kBACzB7B,EAAMxC,SAAS6E,EAAgB5D,UAAUwD,QAf5C,2CAF4B,yD,iICAhBe,IANWC,IAAOC,IAAV,yGAMKD,IAAOC,IAAV,6DAUVC,IANeF,IAAOC,IAAV,iGAMAD,IAAOG,EAAV,wDAITC,GAAcJ,YAAOK,KAAPL,CAAH,8F,wCCUlBM,GAAetF,YAAY,CAChCC,KAAM,UACNN,aARkC,CAClC4F,UAAW,GACXC,UAAW,GACXC,eAAgB,GAChBC,IAAK,IAKLxF,SAAU,CACTyF,aAAc,SAACvF,EAAOC,GACrBD,EAAMmF,UAAYlF,EAAOC,SAE1BsF,aAAc,SAACxF,EAAOC,GACrBD,EAAMoF,UAAYnF,EAAOC,SAE1BuF,OAAQ,SAACzF,EAAOC,GACfD,EAAMsF,IAAMrF,EAAOC,SAEpBwF,kBAAmB,SAClB1F,EACAC,GAEAD,EAAMqF,eAAiBpF,EAAOC,YAMlBQ,GAAYwE,GAAZxE,QAGAiF,GADQT,GAAatE,QCrDpC,SAASgF,GAAWC,GAGnB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAClCD,GAAOD,EAAOE,GAAGE,SAAS,IAAIC,SAAS,EAAG,KAE3C,OAAOJ,EAWR,IAAMK,GACL,6DAEKC,GAAsB,CAC3BC,KAAMF,GACNG,IAAKH,GACLI,IAAKJ,GACLK,OAAQ,6DACRC,IAAK,8DAGC,SAASC,GACfC,GAEU,IACNC,EAFJC,EACS,uDADkB,OAGrBC,EAAuBD,EAAQE,cACrC,GAAyB,IAArBJ,EAAUX,OAAc,MAAO,GAYnC,GATEY,EAFuB,kBAAdD,EACiB,qBAAhBK,aACD,IAAIA,aAAcC,OAAON,GAGzB,IAAIO,WAAWP,EAAUQ,MAAM,IAAIC,KAAI,SAACC,GAAD,OAAOA,EAAEC,WAAW,OAG5DX,EAGE,QAARG,EAAe,CAUlB,IADA,IAAIhF,EAAM,GACDiE,EAAI,EAAGA,EAAIa,EAAOZ,OAAS,EAAGD,GAAK,EAAG,CAC9C,IAAMwB,EAAQX,EAAOW,MAAMxB,EAAGA,EAAI,GAClCjE,GAAO4E,GAAaa,GAAOrB,SAA0B,IAAjBqB,EAAMvB,OAAe,GAAK,EAAG,KAElE,OAAOlE,EAER,IAAKsE,GAASoB,eAAeV,GAAM,MAAM,IAAIvF,MAAM,gBAOnD,IANA,IAAMkG,EAAUrB,GAASU,GAGrBY,EAAIC,OAAO,KAAD,OAAM/B,GAAWgB,KACzBgB,EAAS,GAERF,EAAI,GAAG,CACb,IAAMG,EAAMC,OAAOJ,EAAI,KACvBA,GAAK,IACLE,EAAO3I,KAAKwI,EAAQI,IAGrB,IAAK,IAAI9B,EAAI,EAAiB,IAAda,EAAOb,GAAUA,IAChC6B,EAAO3I,KAAKwI,EAAQ,IAGrB,OAAOG,EAAOG,UAAUC,KAAK,ICjF9B,SAASC,GAAOC,GACf,OAAOC,KAAOC,WAAW,UAAUC,OAAOH,GAAMI,SAWjD,SAASC,GAAmBL,GAC3B,IAAMpJ,EAAS,IAAIoI,WAAWgB,EAAKlC,OAAS,GAG5C,OAFAlH,EAAO0J,IAAIN,GACXpJ,EAAO0J,IAPR,SAAsBN,GACrB,OAAOD,GAAOA,GAAOC,IAAOX,MAAM,EAAG,GAM1BkB,CAAaP,GAAOA,EAAKlC,QAC7BU,GAAa5H,GAGd,SAAS4J,GAAkBvD,GACjC,GAAyB,KAArBA,EAAUa,OACb,MAAM,IAAIzE,MAAM,6CAEjB,IAnBkB2G,EAmBZS,EAAkBV,GAAO9C,GACzByD,GApBYV,EAoBmBS,EAnB9BR,KAAOC,WAAW,aAAaC,OAAOH,GAAMI,UAqB7CpI,EAAU,IAAIgH,WAAW,IAG/B,OAFAhH,EAAQsI,IAAI,CAAC,IACbtI,EAAQsI,IAAII,EAAoB,GACzBL,GAAmBrI,G,aChCvB2I,G,UCQSC,GAAoB,WAChC,IAAM3J,EAAWD,IAEjB,OAAO6J,uBAAY,WAIlB,IAGIC,EAHEC,EAAMC,uBAAY,IAIxB,GACCF,EAAUE,uBAAY,WACbC,KAAUC,iBAAiBJ,IAGrC,IAAMK,EAASF,KAAUG,gBAAgBN,GAAS,GAG5CO,EAASJ,KAAUK,UAAUP,EAAKD,GAGpCG,KAAUM,YAAYF,EAAOG,UAAWT,EAAKI,IAChDlK,EAASuB,GAAQ6E,aAAa3G,aAAwByK,KACtDlK,EAASuB,GAAQgF,kBAAkBgD,GAAkBW,KACrDlK,EAASuB,GAAQ+E,OFEb,SAAgBkE,GACtB,IAAMzJ,EAAU,IAAIgH,WAAWyC,EAAW3D,OAAS,GAGnD,OAFA9F,EAAQsI,IAAI,CAAC,MACbtI,EAAQsI,IAAImB,EAAY,GACjBpB,GAAmBrI,GENA0J,CAAOZ,OAE/B7J,EAASuB,GAAQ6E,aAAa,KAC9BpG,EAASuB,GAAQgF,kBAAkB,KACnCvG,EAASuB,GAAQ+E,OAAO,KACxB/E,GAAQgF,kBAAkB,qCAEzB,CAACvG,K,QCtCU0K,GCKY,WAC1B,IAAQC,EAAiB1K,GACxB,SAACY,GAAD,OAAsBA,IACtB+J,KAFOD,aAKR,OACC,uCACC,eAACE,GAAA,EAAD,CACCC,MAAM,YACNC,QAASpB,KACTqB,QAAQ,YAHT,sFAOA,+HACA,eAACrF,GAAD,UAAYgF,EAAazE,iBACzB,2EACA,eAACP,GAAD,UAAYgF,EAAaxE,U,4DCtBtB8E,GAAqB,6B,SCsBrBC,GAAsBzF,YAAO0F,KAAP1F,CAAH,8CAInB2F,GAAgB3F,YAAO4F,KAAP5F,CAAH,uFC3BJ6F,GDiCe,WAC7B,IDhBuBR,ECgBvB,EAAgD7K,GAC/C,SAACY,GAAD,OAAsBA,IACtB+J,KAFO1F,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAeJ,EAAnC,EAAmCA,SAI7B/E,EAAWD,IAEjB,EElCiC,WAIjC,MAA8CwL,oBAAS,GAAvD,oBAEA,MAAO,CAAEC,gBAFT,KAE0BC,mBAF1B,MF8BgDC,GAAxCF,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAEzB,OACC,uCACC,eAACE,EAAA,EAAD,2BACA,gBAACnG,GAAD,WACC,eAACmG,EAAA,EAAD,6CACA,eAACT,GAAD,CACCU,OD9BmBd,EC8BI3F,EAAclB,WD7BzCgH,GAAmBY,KAAKf,IC8BpBgB,MAAM,2BACNC,SAAU,SAACC,GAAD,OACThM,EAAS6E,EAAgBV,aAAa6H,EAAQC,cAAcpM,SAE7DkL,QAAS,kBAAMU,GAAmB,IAClCS,UAAQ,EACRC,KAAK,OACLtM,MAAOsF,EAAclB,YAEtB,eAACmI,GAAA,EAAD,CACCC,eAAgBjB,GAChBkB,QAAS,WACRb,GAAmB,IAEpBc,KAAMf,EALP,SAOC,eAAC,KAAD,CACCV,MAAO3F,EAAclB,UACrB8H,SAAU,SAACjB,GAAD,OACT9K,EAAS6E,EAAgBV,aAAa2G,EAAMnE,WAI/C,wBACA,eAAC6F,GAAA,EAAD,CACCC,QACC,eAACC,GAAA,EAAD,CACCC,QAASxH,EAAcnB,KACvB+H,SAAU,SAACC,GAAD,OACThM,EACC6E,EAAgBX,YAAY8H,EAAQC,cAAcU,aAKtDb,MAAM,sFAGR,gBAACtG,GAAD,WACC,eAACmG,EAAA,EAAD,yDACA,eAACT,GAAD,CACCY,MAAM,2BACNC,SAAU,SAACC,GAAD,OACThM,EAAS4E,EAAa1B,SAASyF,OAAOqD,EAAQC,cAAcpM,UAE7DqM,UAAQ,EACRC,KAAK,SACLtM,MAAOqF,EAAWtC,QAEnB,wBACA,eAACsI,GAAD,CACCY,MAAM,iCACNC,SAAU,SAACC,GAAD,OACThM,EACC4E,EAAa5B,kBACZ2F,OAAOqD,EAAQC,cAAcpM,UAIhCqM,UAAQ,EACRC,KAAK,SACLtM,MAAOqF,EAAWvD,aAGpB,gBAAC6D,GAAD,WACC,eAACmG,EAAA,EAAD,+DACA,eAACd,GAAA,EAAD,CACCC,MAAM,UACNC,QAAS,kBACR/K,EAAS8E,EAAiB,CAAEC,WAAUI,gBAAeD,iBAEtD8F,QAAQ,YALT,4CASA,wBACA,eAACH,GAAA,EAAD,CACCC,MAAM,UACNC,QAAS,kBAAM/K,EAASuE,MACxByG,QAAQ,YAHT,kDAOA,wBACA,eAACH,GAAA,EAAD,CACCC,MAAM,QACNC,QAAS,kBAAM/K,EAASoF,MACxB4F,QAAQ,YAHT,yD,oBG9HE4B,GAAkBnH,YAAOoH,KAAPpH,CAAH,iDCPNqH,GDWU,WACxB,IAAQ5H,EAAejF,GAAY,SAACY,GAAD,OAAsBA,IAAO+J,KAAxD1F,WACFlF,EAAWD,IAEjB,OACC,uCACC,6BAAImF,EAAWtC,QACf,+BACC,eAACiI,GAAA,EAAD,CACCC,MAAM,UACNC,QAAS,WACR/K,EAASuB,EAAQ4B,cAElB6H,QAAQ,YALT,gCASA,eAACH,GAAA,EAAD,CACCC,MAAM,YACNC,QAAS,WACR/K,EAASuB,EAAQ6B,cAElB4H,QAAQ,YALT,mCAUD,gBAACW,EAAA,EAAD,CAAYoB,GAAG,uBAAf,+BACK7H,EAAWvD,QADhB,OAGA,eAACiL,GAAD,CACC,kBAAgB,uBAChBI,SAAU9H,EAAWnC,SACrBkK,IAAK,IACLC,IAAK,EACLnB,SAAU,SAACoB,EAAGC,GACW,kBAAbA,GACVpN,EAASuB,EAAQyB,kBAAkBoK,KAGrCvN,MAAOqF,EAAWvD,QAClB0L,kBAAkB,QAEnB,6BACC,eAACxC,GAAA,EAAD,CACCC,MAAM,OACNkC,SAAU9H,EAAWnC,SACrBgI,QAAS,WACR/K,EACCyD,EAAiB,CAChB9B,QAASuD,EAAWvD,QACpB9B,MAAO,IACP+B,OAAQ,MAIXoJ,QAAQ,YAZT,kCAiBD,eAACW,EAAA,EAAD,CAAYb,MAAM,QAAlB,SAA2B5F,EAAWpC,UACrCoC,EAAWnC,UAAY,eAACuK,GAAA,EAAD,QEzEZC,GCFa,kBAC3B,gDAEC,oBAAGC,KAAK,+CAAR,0DAFD,6D,oBCCcC,GCUY,WAC1B,IAAMzN,EAAWD,IACjB,OACC,eAAC2N,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,EAAGC,SAAU,SAAUC,GAAI,GAAhD,SACE3N,EACC8H,KAAI,SAAC3G,GAAD,MAAW,CAAEA,OAAMyM,KAAMC,GAAU1M,OACvC2G,KAAI,gBAAG3G,EAAH,EAAGA,KAAMyM,EAAT,EAASA,KAAT,OACJ,gBAAClI,GAAD,CAEC8H,GAAI,CACHM,SAAU,IACVC,SAAU,MACVN,SAAU,EACVC,SAAU,SACVC,GAAI,GAPN,UAUC,gBAACK,GAAA,EAAD,WACC,eAACxC,EAAA,EAAD,CACCb,MAAM,iBACNsD,cAAY,EACZT,GAAI,CAAEU,SAAU,IAHjB,gCAOA,gBAAC1C,EAAA,EAAD,CAAYrL,UAAU,MAAM0K,QAAQ,KAApC,UACE+C,EAAKO,KACLP,EAAKrN,QAEP,eAACiL,EAAA,EAAD,CAAYX,QAAQ,QAApB,SAA6B+C,EAAKQ,iBAEnC,eAACC,GAAA,EAAD,UACC,eAAC3D,GAAA,EAAD,CACCE,QAAS,kBAAM/K,EAASuB,EAAQP,aAAaM,KAC7CmN,WAAY,kBAAMzO,EAASuB,EAAQP,aAAaM,KAChDoN,KAAK,QAHN,8BAxBIX,EAAKrN,Y,SblBZiO,GAAY,CAAC,QAAS,WAE1B,SAASC,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAInI,EAAI,EAAGA,EAAIoI,UAAUnI,OAAQD,IAAK,CAAE,IAAIa,EAASuH,UAAUpI,GAAI,IAAK,IAAIxF,KAAOqG,EAAcoH,OAAOI,UAAU5G,eAAe6G,KAAKzH,EAAQrG,KAAQ2N,EAAO3N,GAAOqG,EAAOrG,IAAY,OAAO2N,GAAkBH,GAASO,MAAMC,KAAMJ,WAEhT,SAASK,GAAyB5H,EAAQ6H,GAAY,GAAc,MAAV7H,EAAgB,MAAO,GAAI,IAAkErG,EAAKwF,EAAnEmI,EAEzF,SAAuCtH,EAAQ6H,GAAY,GAAc,MAAV7H,EAAgB,MAAO,GAAI,IAA2DrG,EAAKwF,EAA5DmI,EAAS,GAAQQ,EAAaV,OAAOW,KAAK/H,GAAqB,IAAKb,EAAI,EAAGA,EAAI2I,EAAW1I,OAAQD,IAAOxF,EAAMmO,EAAW3I,GAAQ0I,EAASG,QAAQrO,IAAQ,IAAa2N,EAAO3N,GAAOqG,EAAOrG,IAAQ,OAAO2N,EAFxMW,CAA8BjI,EAAQ6H,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBlI,GAAS,IAAKb,EAAI,EAAGA,EAAIgJ,EAAiB/I,OAAQD,IAAOxF,EAAMwO,EAAiBhJ,GAAQ0I,EAASG,QAAQrO,IAAQ,GAAkByN,OAAOI,UAAUY,qBAAqBX,KAAKzH,EAAQrG,KAAgB2N,EAAO3N,GAAOqG,EAAOrG,IAAU,OAAO2N,EAMne,SAASe,GAAQC,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,GAAyBU,EAAMpB,IAE3C,OAAoB,gBAAoB,MAAOC,GAAS,CACtDwB,MAAO,6BACPC,QAAS,kBACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DlD,GAAImD,GACHD,GAAS,KAAMvG,KAAOA,GAAkB,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CACjH6G,EAAG,m6EACY,gBAAoB,SAAU,CAC7CC,GAAI,MACJC,GAAI,MACJC,EAAG,OACY,gBAAoB,OAAQ,CAC3CH,EAAG,oBAIP,I,YAAII,GAA0B,aAAiBb,IcjBzCc,IdkBS,IclBcC,aAAH,yHAUpBC,GAAcrL,YAAOsL,GAAPtL,CAAH,qKAKFmL,IAGN,SAACT,GAAD,OAAWA,EAAMlM,aClCX+M,GDqCa,WAC3B,IAAQ7L,EAAkBlF,GACzB,SAACY,GAAD,OAAsBA,IACtB+J,KAFOzF,cAIFnF,EAAWD,IAEjB,OACC,uCACC,6BACC,eAAC+Q,GAAD,CACC,gBAAe3L,EAAcnB,KAC7BC,UAAWkB,EAAclB,cAG3B,6BACC,eAAC4G,GAAA,EAAD,CACCC,MAAM,UACNC,QAAS,WACR/K,EAASuB,EAAQ2C,aAAaiB,EAAcnB,QAE7CgH,QAAQ,YALT,SAOE7F,EAAcnB,KAAO,qBAAQ,yBAGhC,6BACC,eAAC6G,GAAA,EAAD,CACCC,MAAM,UACNC,QAAS,WACR/K,EAASuB,EAAQ4C,aV3DA,WAClBjC,KAAK+O,MAAsB,SAAhB/O,KAAKC,UAClB2E,SAAS,IACTC,SAAS,EAAG,SU0DViE,QAAQ,YALT,gFEhEWkG,GCUgB,WAC9B,IAAMlR,EAAWD,IACjB,OACC,uCACC,gBAACyF,GAAD,WACC,eAACmG,EAAA,EAAD,8GACA,eAACA,EAAA,EAAD,wNAID,gBAACnG,GAAD,WACC,eAACmG,EAAA,EAAD,uCAEA,eAAC+B,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,EAAGC,SAAU,SAAUC,GAAI,GAAhD,SACE3N,EACC8H,KAAI,SAAC3G,GAAD,MAAW,CAAEA,OAAMyM,KAAMC,GAAU1M,OACvC2G,KAAI,gBAAG3G,EAAH,EAAGA,KAAMyM,EAAT,EAASA,KAAT,OACJ,gBAAClI,GAAD,CAEC8H,GAAI,CACHM,SAAU,IACVC,SAAU,MACVN,SAAU,EACVC,SAAU,SACVC,GAAI,GAPN,UAUC,gBAACK,GAAA,EAAD,WACC,eAACxC,EAAA,EAAD,CACCb,MAAM,iBACNsD,cAAY,EACZT,GAAI,CAAEU,SAAU,IAHjB,gCAOA,gBAAC1C,EAAA,EAAD,CAAYrL,UAAU,MAAM0K,QAAQ,KAApC,UACE+C,EAAKO,KACLP,EAAKrN,QAEP,eAACiL,EAAA,EAAD,CAAYX,QAAQ,QAApB,SAA6B+C,EAAKQ,iBAEnC,eAACC,GAAA,EAAD,UACC,eAAC3D,GAAA,EAAD,CACCE,QAAS,kBAAM/K,EAASuB,EAAQP,aAAaM,KAC7CmN,WAAY,kBAAMzO,EAASuB,EAAQP,aAAaM,KAChDoN,KAAK,QAHN,8BAxBIX,EAAKrN,cAoCf,eAAC8E,GAAD,UACC,gBAACmG,EAAA,EAAD,4CAEC,oBAAG6B,KAAK,+CAAR,0DAFD,wECkBWQ,GAzDX,CACHpL,MAAO,CACNtC,UAAW,eAAC,GAAD,IACXI,KAAM,6CACN4N,KAAM,eAAC6C,EAAA,EAAD,IACN5C,YAAa,sEAEd6C,SAAU,CACT9Q,UAAW,eAAC,GAAD,IACXI,KAAM,iCACN4N,KAAM,eAAC+C,EAAA,EAAD,IACN9C,YAAa,uFAEd+C,SAAU,CACThR,UAAW,eAAC,GAAD,IACXI,KAAM,qBACN4N,KAAM,eAACiD,EAAA,EAAD,IACNhD,YAAa,0DAEdiD,YAAa,CACZlR,UAAW,eAAC,GAAD,IACXI,KAAM,2BACN4N,KAAM,eAACmD,EAAA,EAAD,IACNlD,YACC,8HAEC,wBAFD,2FAOFmD,WAAY,CACXpR,UAAW,eAAC,GAAD,IACXI,KAAM,eACN4N,KAAM,eAACqD,EAAA,EAAD,IACNpD,YAAa,mGAEdqD,QAAS,CACRtR,UAAW,eAAC,GAAD,IACXI,KAAM,uCACN4N,KAAM,eAACuD,EAAA,EAAD,IACNtD,YAAa,0DAEduD,QAAS,CACRxR,UAAW,eAAC,GAAD,IACXI,KAAM,uCACN4N,KAAM,eAACyD,GAAA,EAAD,IACNxD,YACC,4GAEC,wBAFD,oEC1EYyD,GCMoB,WAClC,IAAQjN,EAAa9E,GAAY,SAACY,GAAD,OAAsBA,IAAO+J,KAAtD7F,SACF/E,EAAWD,IACjB,OACC,eAAC2N,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACC,eAACoE,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACC,gBAACC,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,CACC,aAAW,OACXrH,MAAM,UACNsH,KAAK,QACLrH,QAAS,kBAAM/K,EAASuB,EAAQX,aAAamE,EAAS1E,YACtDqO,KAAK,SACLf,GAAI,CAAE0E,GAAI,GANX,SAQC,eAAC,IAAD,MAED,eAAC1G,EAAA,EAAD,CAAYrL,UAAU,MAAMqN,GAAI,CAAEC,SAAU,GAAK5C,QAAQ,KAAzD,SACEjG,EAASzE,WAAa0N,GAAUjJ,EAASzE,WAAWI,OAEtD,eAACyR,EAAA,EAAD,CACC,aAAW,OACXrH,MAAM,UACNsH,KAAK,QACLrH,QAAS,kBAAM/K,EAASuB,EAAQP,aAAab,EAAS,MACtDuO,KAAK,SACLf,GAAI,CAAE0E,GAAI,GANX,SAQC,eAACZ,EAAA,EAAD,c,sEClCSa,GCaS,WACvB,IAAQvN,EAAa9E,GAAY,SAACY,GAAD,OAAsBA,IAAO+J,KAAtD7F,SACF/E,EAAWD,IAEjB,OACC,eAACwS,GAAA,EAAD,CACCC,OAAO,OACPlG,QAAS,kBAAMtM,EAASuB,EAAQX,aAAY,KAC5C2L,KAAMxH,EAAS1E,SAHhB,SAKC,uBACCoS,UAAW,kBAAMzS,EAASuB,EAAQX,aAAY,KAC9C8R,KAAK,eAFN,UAIC,eAACC,GAAA,EAAD,UACC,gBAACC,GAAA,EAAD,CACCC,QAAM,EACN9H,QAAS,WACR/K,EAASuB,EAAQX,aAAY,KAH/B,UAMC,eAACkS,GAAA,EAAD,UACC,eAACC,GAAA,EAAD,MAED,eAACC,GAAA,EAAD,CAAcC,QAAQ,4BAGxB,eAACC,GAAA,EAAD,IACA,eAACP,GAAA,EAAD,UACExS,EAAS8H,KAAI,SAAC3G,GAAD,OACb,gBAACsR,GAAA,EAAD,CACCC,QAAM,EAEN9H,QAAS,WACR/K,EAASuB,EAAQP,aAAaM,IAC9BtB,EAASuB,EAAQX,aAAY,KAL/B,UAQC,eAACkS,GAAA,EAAD,UAAe9E,GAAU1M,GAAMgN,OAC/B,eAAC0E,GAAA,EAAD,CAAcC,QAASjF,GAAU1M,GAAMZ,SAPlCY,cClCN6R,GAAS1N,IAAOC,IAAV,oHAWN0N,GAAe3N,IAAOC,IAAV,4KAsCH2N,GA7BQ,WACtB,MAAgDpT,GAC/C,SAACY,GAAD,OAAsBA,IACtB+J,KAFO7F,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,cAIxBnF,EAAWD,IAUjB,OARAuT,IAAMC,WAAU,WACfvT,EAASsF,OACP,CAACtF,IAEJsT,IAAMC,WAAU,WACfvT,EAAS8E,EAAiB,CAAEC,WAAUG,aAAYC,qBAChD,CAACnF,EAAU+E,EAAUG,EAAYC,IAGnC,gBAAC,IAAMqO,WAAP,WACC,eAAC,GAAD,IACA,gBAACL,GAAD,WACC,eAACjB,EAAA,EAAD,IACA,eAACkB,GAAD,UACErO,EAASzE,WAAa0N,GAAUjJ,EAASzE,WAAWA,eAGvD,eAAC,GAAD,QCnDUmT,I,OAAQC,YAAe,CACnCjS,QAAS,CACRyD,WAAYpB,EACZiB,SAAUvD,EACV2D,cAAef,EACfuG,aAAcgJ,OCLhBC,IAASC,OACR,eAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACC,eAAC,GAAD,MAEDK,SAASC,eAAe,W","file":"static/js/main.51f83a43.chunk.js","sourcesContent":["export function Uint8ArrayToHex(prm: Uint8Array): string {\n\treturn Buffer.from(prm.buffer).toString(\"hex\");\n}\n\nexport function Uint8ArrayToNumberArray(prm: Uint8Array): number[] {\n\tconst result: number[] = [];\n\tprm.forEach((value) => result.push(value));\n\treturn result;\n}\n","import {\n\tTypedUseSelectorHook,\n\tuseDispatch as dispatch,\n\tuseSelector as selector,\n} from \"react-redux\";\nimport { RootState, store } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useDispatch = () => dispatch<typeof store.dispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n/** メニューリスト */\nexport const menuList = [\n\t\"welcomePage\",\n\t\"count\",\n\t\"spinLogo\",\n\t\"bitcoin\",\n\t\"configPage\",\n\t\"siteMap\",\n\t\"helpPage\",\n] as const;\n\n/** メニュー一覧タイプ */\nexport type menuComponents = typeof menuList[number];\n\n// Define a type for the slice state\nexport interface AppState {\n\t/** メニューを表示するかどうか */\n\topenMenu: boolean;\n\t/** 表示するコンポーネント */\n\tcomponent?: menuComponents;\n}\n\n// Define the initial state using that type\nconst initialState: AppState = {\n\topenMenu: false,\n\tcomponent: undefined,\n};\n\nconst appSlice = createSlice({\n\tname: \"app\",\n\tinitialState,\n\treducers: {\n\t\tsetOpenMenu: (state, action: PayloadAction<typeof state.openMenu>) => {\n\t\t\tstate.openMenu = action.payload;\n\t\t},\n\t\tsetComponent: (state, action: PayloadAction<typeof state.component>) => {\n\t\t\tstate.component = action.payload;\n\t\t},\n\t\tparseJSON: (state, action: PayloadAction<string>) => {\n\t\t\t[state.component] = menuList;\n\t\t\tJSON.parse(action.payload, (key, value) => {\n\t\t\t\tif (key === \"openMenu\" && typeof value === \"boolean\") {\n\t\t\t\t\tstate.openMenu = value;\n\t\t\t\t} else if (\n\t\t\t\t\tkey === \"component\" &&\n\t\t\t\t\tmenuList.find((menu) => menu === value)\n\t\t\t\t) {\n\t\t\t\t\tstate.component = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = appSlice;\n\nconst appReducer = appSlice.reducer;\nexport default appReducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { actions } from \"../state/count\";\n\n/**\n * 遅延判定メソッド\n * @param percent 確率\n * @param second 秒数\n * @remarks\n * second秒後にpercent%の確率でtrueを返し、\n * でなければrejectする\n */\nconst judgment = async (percent: number, second: number) =>\n\tnew Promise<boolean>((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tif (Math.random() < percent / 100) {\n\t\t\t\tresolve(true);\n\t\t\t}\n\t\t\treject(new Error());\n\t\t}, second * 1000);\n\t});\n\ntype fetchCounterArgType = {\n\t/** 増える確率 */\n\tpercent: number;\n\t/** 秒数 */\n\tsecond: number;\n\t/** 値 */\n\tvalue: number;\n};\n\ntype fetchCounterReturnType = {\n\t/** 増減値 */\n\tcount: number;\n};\n\n/**\n * 遅延増減メソッド\n * @remarks\n * 渡された秒数後に渡された確率で渡された値を返し、\n * でなければ例外を返す\n */\nconst fetchCounter = createAsyncThunk<\n\tfetchCounterReturnType,\n\tfetchCounterArgType\n>(\"lastcount/fetch\", async (arg, thunk): Promise<fetchCounterReturnType> => {\n\tthunk.dispatch(actions.setProgress(true));\n\n\tconst res = await judgment(arg.percent, arg.second).catch(() => false);\n\n\tthunk.dispatch(actions.setProgress(false));\n\n\tif (res) {\n\t\treturn { count: arg.value };\n\t}\n\n\tthrow new Error(\"fetch count error\");\n});\n\nexport default fetchCounter;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport fetchLastCounter from \"../thunk/fetchCounter\";\n\n// Define a type for the slice state\nexport interface CounterState {\n\t/** 表示するメッセージ */\n\tmessage: string;\n\t/** プログレスフラグ */\n\tprogress: boolean;\n\t/** カウント値 */\n\tcount: number;\n\t/** 確率 */\n\tpercent: number;\n}\n\n// Define the initial state using that type\nconst initialState: CounterState = {\n\tmessage: \"\",\n\tprogress: false,\n\tcount: 0,\n\tpercent: 50,\n};\nconst countSlice = createSlice({\n\tname: \"count\",\n\tinitialState,\n\treducers: {\n\t\t/** 確率を設定する */\n\t\tsetShowingPercent: (state, action: PayloadAction<number>) => {\n\t\t\tstate.percent = action.payload;\n\t\t},\n\t\tsetProgress: (state, action: PayloadAction<boolean>) => {\n\t\t\tstate.progress = action.payload;\n\t\t},\n\t\tsetMessasge: (state, action: PayloadAction<string>) => {\n\t\t\tstate.message = action.payload;\n\t\t},\n\t\tsetCount: (state, action: PayloadAction<typeof state.count>) => {\n\t\t\tstate.count = action.payload;\n\t\t},\n\t\tincrement: (state) => {\n\t\t\tstate.count += 1;\n\t\t},\n\t\tdecrement: (state) => {\n\t\t\tstate.count -= 1;\n\t\t},\n\t\tincrementByAmount: (state, action: PayloadAction<number>) => {\n\t\t\tstate.count += action.payload;\n\t\t},\n\t\tparseJSON: (state, action: PayloadAction<string>) => {\n\t\t\tJSON.parse(action.payload, (key, value) => {\n\t\t\t\tif (key === \"count\" && typeof value === \"number\") {\n\t\t\t\t\tstate.count = value;\n\t\t\t\t} else if (key === \"percent\" && typeof value === \"number\") {\n\t\t\t\t\tstate.percent = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(fetchLastCounter.pending, (state, action) => ({\n\t\t\t...state,\n\t\t\tmessage: `判定中です。${action.meta.arg.second}秒後に${action.meta.arg.percent}%の確率で${action.meta.arg.value}増えます。`,\n\t\t}));\n\t\tbuilder.addCase(fetchLastCounter.fulfilled, (state, action) => ({\n\t\t\t...state,\n\t\t\tcount: state.count + action.payload.count,\n\t\t\tmessage: `判定に成功しました。${action.payload.count}増えました。`,\n\t\t}));\n\t\tbuilder.addCase(fetchLastCounter.rejected, (state) => ({\n\t\t\t...state,\n\t\t\tmessage: \"判定に失敗しました。1減りました。\",\n\t\t\tcount: state.count - 1,\n\t\t}));\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = countSlice;\n\nconst countReducer = countSlice.reducer;\nexport default countReducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// Define a type for the slice state\nexport interface SpinLogoState {\n\t/** ロゴ回転フラグ */\n\tspin: boolean;\n\t/** ロゴの色 */\n\tlogoColor: string;\n}\n\n// Define the initial state using that type\nconst initialState: SpinLogoState = {\n\tspin: false,\n\tlogoColor: \"#61DAFB\",\n};\nconst spinLogoSlice = createSlice({\n\tname: \"spinLogo\",\n\tinitialState,\n\treducers: {\n\t\tsetSpinLogo: (state, action: PayloadAction<typeof state.spin>) => {\n\t\t\tstate.spin = action.payload;\n\t\t},\n\t\tsetLogoColor: (state, action: PayloadAction<typeof state.logoColor>) => {\n\t\t\tstate.logoColor = action.payload;\n\t\t},\n\t\tparseJSON: (state, action: PayloadAction<string>) => {\n\t\t\tJSON.parse(action.payload, (key, value) => {\n\t\t\t\tif (key === \"logoColor\" && typeof value === \"string\") {\n\t\t\t\t\tstate.logoColor = value;\n\t\t\t\t} else if (key === \"spin\" && typeof value === \"boolean\") {\n\t\t\t\t\tstate.spin = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = spinLogoSlice;\n\nconst spinLogoReducer = spinLogoSlice.reducer;\nexport default spinLogoReducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { AppState } from \"../state/app\";\nimport { actions as countActions, CounterState } from \"../state/count\";\nimport { actions as spinLogoActions, SpinLogoState } from \"../state/spinLogo\";\n\ntype saveLocalStorageArgType = {\n\tappState?: AppState;\n\tcountState?: CounterState;\n\tspinLogoState?: SpinLogoState;\n};\n\nconst localStorageKeyPrefix = \"study-react/\";\nconst localStorageKeyList = [\n\t`${localStorageKeyPrefix}appState`,\n\t`${localStorageKeyPrefix}countState`,\n\t`${localStorageKeyPrefix}spinLogoState`,\n];\n\n/**\n * ローカルストレージから設定をロード\n */\nconst loadLocalStorage = createAsyncThunk<void, void>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (arg, thunk): Promise<void> => {\n\t\t[\n\t\t\t`${localStorageKeyPrefix}countState`,\n\t\t\t`${localStorageKeyPrefix}spinLogoState`,\n\t\t].forEach((localStorageKey) => {\n\t\t\t// ローカルストレージからStateを取得\n\t\t\tconst savedStateData = localStorage.getItem(localStorageKey);\n\t\t\tif (savedStateData === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (localStorageKey === `${localStorageKeyPrefix}countState`) {\n\t\t\t\tthunk.dispatch(countActions.parseJSON(savedStateData));\n\t\t\t} else if (localStorageKey === `${localStorageKeyPrefix}spinLogoState`) {\n\t\t\t\tthunk.dispatch(spinLogoActions.parseJSON(savedStateData));\n\t\t\t}\n\t\t});\n\t}\n);\n\n/**\n * ローカルストレージにStateを保存\n */\nconst saveLocalStorage = createAsyncThunk<void, saveLocalStorageArgType>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (arg): Promise<void> => {\n\t\t// ローカルストレージにStateを保存\n\t\tif (arg.appState) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`${localStorageKeyPrefix}appState`,\n\t\t\t\tJSON.stringify(arg.appState)\n\t\t\t);\n\t\t}\n\t\tif (arg.countState) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`${localStorageKeyPrefix}countState`,\n\t\t\t\tJSON.stringify(arg.countState)\n\t\t\t);\n\t\t}\n\t\tif (arg.spinLogoState) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`${localStorageKeyPrefix}spinLogoState`,\n\t\t\t\tJSON.stringify(arg.spinLogoState)\n\t\t\t);\n\t\t}\n\t}\n);\n\n/**\n * ローカルストレージをクリア\n */\nconst clearLocalStorage = createAsyncThunk<void, void>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (): Promise<void> => {\n\t\t// ローカルストレージをクリア\n\t\tlocalStorageKeyList.forEach((localStorageKey) =>\n\t\t\tlocalStorage.removeItem(localStorageKey)\n\t\t);\n\t}\n);\n\nexport {\n\tloadLocalStorage,\n\tsaveLocalStorage,\n\tclearLocalStorage,\n\tlocalStorageKeyPrefix,\n\tlocalStorageKeyList,\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { actions as appActions, menuList } from \"../state/app\";\nimport { actions as countActions } from \"../state/count\";\nimport { actions as spinLogoActions } from \"../state/spinLogo\";\nimport { localStorageKeyList, localStorageKeyPrefix } from \"./localStorage\";\n\n/**\n * アプリケーションの初期化\n */\nconst init = createAsyncThunk<void, void>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (arg, thunk): Promise<void> => {\n\t\tthunk.dispatch(appActions.setComponent(menuList[0]));\n\t\tlocalStorageKeyList.forEach((localStorageKey) => {\n\t\t\t// ローカルストレージからStateを取得\n\t\t\tconst savedStateData = localStorage.getItem(localStorageKey);\n\n\t\t\tif (!savedStateData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (localStorageKey === `${localStorageKeyPrefix}appState`) {\n\t\t\t\tthunk.dispatch(appActions.parseJSON(savedStateData));\n\t\t\t} else if (localStorageKey === `${localStorageKeyPrefix}countState`) {\n\t\t\t\tthunk.dispatch(countActions.parseJSON(savedStateData));\n\t\t\t} else if (localStorageKey === `${localStorageKeyPrefix}spinLogoState`) {\n\t\t\t\tthunk.dispatch(spinLogoActions.parseJSON(savedStateData));\n\t\t\t}\n\t\t});\n\t}\n);\n\nexport { init };\n","import styled from \"@emotion/styled\";\nimport { Card } from \"@mui/material\";\n\nexport const DivLikeA = styled.div`\n\tcursor: pointer;\n\ttext-decoration: underline;\n\tdisplay: inline-block;\n`;\n\nexport const DividedDiv = styled.div`\n\tborder-top: 1px solid black;\n`;\n\nexport const CenteringDiv = styled.div`\n\ttext-align: center;\n\tjustify-content: center;\n\tdisplay: flex;\n`;\n\nexport const WordWrapP = styled.p`\n\tword-break: break-word;\n`;\n\nexport const SitemapCard = styled(Card)`\n\tmargin: 30px auto;\n\ttext-align: left;\n\twidth: fit-content;\n`;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// Define a type for the slice state\nexport interface BitcoinState {\n\t/**\n\t * 公開鍵\n\t * 65byteのバイト配列\n\t *  */\n\tpublicKey: number[];\n\t/**\n\t * 秘密鍵\n\t * 32byteのバイト配列\n\t *  */\n\tsecretKey: number[];\n\t/**\n\t * ビットコインアドレス\n\t * base58(P2PKH)形式\n\t *  */\n\tbitcoinAddress: string;\n\t/**\n\t * 秘密鍵\n\t * WIF形式\n\t *  */\n\twif: string;\n}\n\n// Define the initial state using that type\nconst initialState: BitcoinState = {\n\tpublicKey: [],\n\tsecretKey: [],\n\tbitcoinAddress: \"\",\n\twif: \"\",\n};\nconst BitcoinSlice = createSlice({\n\tname: \"bitcoin\",\n\tinitialState,\n\treducers: {\n\t\tsetPublicKey: (state, action: PayloadAction<typeof state.publicKey>) => {\n\t\t\tstate.publicKey = action.payload;\n\t\t},\n\t\tsetSecretKey: (state, action: PayloadAction<typeof state.secretKey>) => {\n\t\t\tstate.secretKey = action.payload;\n\t\t},\n\t\tsetWif: (state, action: PayloadAction<typeof state.wif>) => {\n\t\t\tstate.wif = action.payload;\n\t\t},\n\t\tsetBitcoinAddress: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<typeof state.bitcoinAddress>\n\t\t) => {\n\t\t\tstate.bitcoinAddress = action.payload;\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = BitcoinSlice;\n\nconst BitcoinReducer = BitcoinSlice.reducer;\nexport default BitcoinReducer;\n","/*! micro-base58 - MIT License (c) 2021, Paul Miller (https://paulmillr.com) */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-prototype-builtins */\n/* eslint-disable no-plusplus */\n\nfunction bytesToHex(uint8a: Uint8Array): string {\n\t// pre-caching chars could speed this up 6x.\n\tlet hex = \"\";\n\tfor (let i = 0; i < uint8a.length; i++) {\n\t\thex += uint8a[i].toString(16).padStart(2, \"0\");\n\t}\n\treturn hex;\n}\n\ninterface Alphabets {\n\tipfs: string;\n\tbtc: string;\n\tflickr: string;\n\txmr: string;\n\txrp: string;\n}\n\nconst COMMON_B58_ALPHABET =\n\t\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n\nconst alphabet: Alphabets = {\n\tipfs: COMMON_B58_ALPHABET,\n\tbtc: COMMON_B58_ALPHABET,\n\txmr: COMMON_B58_ALPHABET,\n\tflickr: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\",\n\txrp: \"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\",\n};\n\nexport function base58encode(\n\tprmSource: string | Uint8Array,\n\tprmType: keyof Alphabets = \"ipfs\"\n): string {\n\tlet source: string | Uint8Array;\n\tconst ype: keyof Alphabets = prmType.toLowerCase() as keyof Alphabets;\n\tif (prmSource.length === 0) return \"\";\n\tif (typeof prmSource === \"string\") {\n\t\tif (typeof TextEncoder !== \"undefined\") {\n\t\t\tsource = new TextEncoder().encode(prmSource);\n\t\t} else {\n\t\t\t// note: only supports ASCII\n\t\t\tsource = new Uint8Array(prmSource.split(\"\").map((c) => c.charCodeAt(0)));\n\t\t}\n\t} else {\n\t\tsource = prmSource;\n\t}\n\n\tif (ype === \"xmr\") {\n\t\t// xmr ver is done in 8-byte blocks.\n\t\t// This gives us eight full-sized blocks and one 5-byte block.\n\t\t// Eight bytes converts to 11 or less Base58 characters;\n\t\t// if a particular block converts to <11 characters,\n\t\t// the conversion pads it with \"1\"s (1 is 0 in Base58).\n\t\t// Likewise, the final 5-byte block can convert to 7 or less Base58 digits;\n\t\t// the conversion will ensure the result is 7 digits. Due to the conditional padding,\n\t\t// the 69-byte string will always convert to 95 Base58 characters (8 * 11 + 7).\n\t\tlet res = \"\";\n\t\tfor (let i = 0; i < source.length + 3; i += 8) {\n\t\t\tconst slice = source.slice(i, i + 8);\n\t\t\tres += base58encode(slice).padStart(slice.length === 8 ? 11 : 7, \"1\");\n\t\t}\n\t\treturn res;\n\t}\n\tif (!alphabet.hasOwnProperty(ype)) throw new Error(\"invalid type\");\n\tconst letters = alphabet[ype];\n\n\t// Convert Uint8Array to BigInt, Big Endian.\n\tlet x = BigInt(`0x${bytesToHex(source)}`);\n\tconst output = [];\n\n\twhile (x > 0) {\n\t\tconst mod = Number(x % 58n);\n\t\tx /= 58n;\n\t\toutput.push(letters[mod]);\n\t}\n\n\tfor (let i = 0; source[i] === 0; i++) {\n\t\toutput.push(letters[0]);\n\t}\n\n\treturn output.reverse().join(\"\");\n}\n\nexport function decode(\n\toutput: string,\n\ttype: keyof Alphabets = \"ipfs\"\n): Uint8Array {\n\tif (output.length === 0) return new Uint8Array([]);\n\tconst letters = alphabet[type];\n\tconst bytes = [0];\n\tfor (let i = 0; i < output.length; i++) {\n\t\tconst char = output[i];\n\t\tconst value = letters.indexOf(char);\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t`base58.decode received invalid input. Character '${char}' is not in the base58 alphabet.`\n\t\t\t);\n\t\t}\n\t\tfor (let j = 0; j < bytes.length; j++) {\n\t\t\tbytes[j] *= 58;\n\t\t}\n\t\tbytes[0] += value;\n\t\tlet carry = 0;\n\t\tfor (let j = 0; j < bytes.length; j++) {\n\t\t\tbytes[j] += carry;\n\t\t\tcarry = bytes[j] >> 8;\n\t\t\tbytes[j] &= 0xff;\n\t\t}\n\t\twhile (carry > 0) {\n\t\t\tbytes.push(carry & 0xff);\n\t\t\tcarry >>= 8;\n\t\t}\n\t}\n\tfor (let i = 0; i < output.length && output[i] === \"1\"; i++) {\n\t\tbytes.push(0);\n\t}\n\treturn new Uint8Array(bytes.reverse());\n}\n","import crypto from \"crypto\";\nimport { base58encode } from \"./Base58Utils\";\n\nfunction sha256(data: crypto.BinaryLike): Buffer {\n\treturn crypto.createHash(\"sha256\").update(data).digest();\n}\n\nfunction ripemd160(data: crypto.BinaryLike): Buffer {\n\treturn crypto.createHash(\"ripemd160\").update(data).digest();\n}\n\nfunction calcChecksum(data: crypto.BinaryLike) {\n\treturn sha256(sha256(data)).slice(0, 4);\n}\n\nfunction base58WithChecksum(data: Uint8Array) {\n\tconst result = new Uint8Array(data.length + 4);\n\tresult.set(data);\n\tresult.set(calcChecksum(data), data.length);\n\treturn base58encode(result);\n}\n\nexport function genBitcoinAddress(publicKey: Uint8Array): string {\n\tif (publicKey.length !== 65) {\n\t\tthrow new Error(\"publicKey is not 65 byte length Exception\");\n\t}\n\tconst sha256edpayload = sha256(publicKey);\n\tconst ripemded160payload = ripemd160(sha256edpayload);\n\n\tconst payload = new Uint8Array(21);\n\tpayload.set([0]);\n\tpayload.set(ripemded160payload, 1);\n\treturn base58WithChecksum(payload);\n}\n\nexport function genWif(privateKey: Uint8Array): string {\n\tconst payload = new Uint8Array(privateKey.length + 1);\n\tpayload.set([0x80]);\n\tpayload.set(privateKey, 1);\n\treturn base58WithChecksum(payload);\n}\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.193714bf.svg\";\nexport { ForwardRef as ReactComponent };","import { randomBytes } from \"crypto\";\nimport { useCallback } from \"react\";\nimport secp256k1 from \"secp256k1\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/bitcoin\";\nimport { genBitcoinAddress, genWif } from \"../../utils/BitcoinUtils\";\nimport { Uint8ArrayToNumberArray } from \"../../utils/Uint8ArrayUtils\";\n\nexport const useBitcoinAddress = (): (() => void) => {\n\tconst dispatch = useDispatch();\n\n\treturn useCallback(() => {\n\t\t// generate message to sign\n\t\t// message should have 32-byte length, if you have some other length you can hash message\n\t\t// for example `msg = sha256(rawMessage)`\n\t\tconst msg = randomBytes(32);\n\n\t\t// generate privKey\n\t\tlet privKey;\n\t\tdo {\n\t\t\tprivKey = randomBytes(32);\n\t\t} while (!secp256k1.privateKeyVerify(privKey));\n\n\t\t// get the public key in a compressed format\n\t\tconst pubKey = secp256k1.publicKeyCreate(privKey, false);\n\n\t\t// sign the message\n\t\tconst sigObj = secp256k1.ecdsaSign(msg, privKey);\n\n\t\t// verify the signature\n\t\tif (secp256k1.ecdsaVerify(sigObj.signature, msg, pubKey)) {\n\t\t\tdispatch(actions.setPublicKey(Uint8ArrayToNumberArray(pubKey)));\n\t\t\tdispatch(actions.setBitcoinAddress(genBitcoinAddress(pubKey)));\n\t\t\tdispatch(actions.setWif(genWif(privKey)));\n\t\t} else {\n\t\t\tdispatch(actions.setPublicKey([]));\n\t\t\tdispatch(actions.setBitcoinAddress(\"\"));\n\t\t\tdispatch(actions.setWif(\"\"));\n\t\t\tactions.setBitcoinAddress(\"エラー発生\");\n\t\t}\n\t}, [dispatch]);\n};\n","import Bitcoin from \"./Bitcoin\";\n\nexport default Bitcoin;\n","import { Button } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useSelector } from \"../../redux/hooks\";\nimport { RootState } from \"../../redux/store\";\nimport { WordWrapP } from \"../Common/Styled\";\nimport { useBitcoinAddress } from \"./Bitcoin.hooks\";\n\nconst Bitcoin: React.VFC = () => {\n\tconst { bitcoinState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tonClick={useBitcoinAddress()}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\tビットコインアドレス生成\n\t\t\t</Button>\n\t\t\t<p>ビットコインアドレス(BASE58(P2PKH)形式)：</p>\n\t\t\t<WordWrapP>{bitcoinState.bitcoinAddress}</WordWrapP>\n\t\t\t<p>秘密鍵(WIF形式)：</p>\n\t\t\t<WordWrapP>{bitcoinState.wif}</WordWrapP>\n\t\t</>\n\t);\n};\n\nexport default Bitcoin;\n","/**\n * カラーコードの正規表現\n */\nconst HTMLColorCodeRegex = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n\n/**\n * #000000～#FFFFFFの中からランダムの色を返します\n *\n * @returns ランダムの色\n */\nconst getRandomColor = (): string =>\n\t`#${Math.floor(Math.random() * 16777216)\n\t\t.toString(16)\n\t\t.padStart(6, \"0\")}`;\n\n/**\n * HTML カラーコードが正しいかどうか判定します\n *\n * @returns 正しい\n */\nconst checkHTMLColor = (color: string): boolean =>\n\tHTMLColorCodeRegex.test(color);\n\nexport { getRandomColor, checkHTMLColor, HTMLColorCodeRegex };\n","import styled from \"@emotion/styled\";\nimport {\n\tButton,\n\tCheckbox,\n\tDialog,\n\tFormControlLabel,\n\tPaper,\n\tTextField,\n\tTypography,\n} from \"@mui/material\";\nimport { SketchPicker } from \"react-color\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions as countActions } from \"../../redux/state/count\";\nimport { actions as spinLogoActions } from \"../../redux/state/spinLogo\";\nimport { RootState } from \"../../redux/store\";\nimport {\n\tclearLocalStorage,\n\tloadLocalStorage,\n\tsaveLocalStorage,\n} from \"../../redux/thunk/localStorage\";\nimport { checkHTMLColor } from \"../../utils/HTMLUtils\";\nimport { DividedDiv } from \"../Common/Styled\";\nimport { useShowColorPicker } from \"./hooks\";\n\nconst GoodMarginTextField = styled(TextField)`\n\tmargin: 8px;\n`;\n\nconst NoMarginPaper = styled(Paper)`\n\tmargin: 0;\n\tmax-height: unset;\n\tmax-width: unset;\n`;\n\nconst ConfigPage: React.VFC = () => {\n\tconst { countState, spinLogoState, appState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\tconst { showColorPicker, setShowColorPicker } = useShowColorPicker();\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>設定</Typography>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>ロゴまわし</Typography>\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\terror={!checkHTMLColor(spinLogoState.logoColor)}\n\t\t\t\t\tlabel=\"ロゴの色\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(spinLogoActions.setLogoColor(element.currentTarget.value))\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => setShowColorPicker(true)}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={spinLogoState.logoColor}\n\t\t\t\t/>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperComponent={NoMarginPaper}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetShowColorPicker(false);\n\t\t\t\t\t}}\n\t\t\t\t\topen={showColorPicker}\n\t\t\t\t>\n\t\t\t\t\t<SketchPicker\n\t\t\t\t\t\tcolor={spinLogoState.logoColor}\n\t\t\t\t\t\tonChange={(color) =>\n\t\t\t\t\t\t\tdispatch(spinLogoActions.setLogoColor(color.hex))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t\t<br />\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tchecked={spinLogoState.spin}\n\t\t\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tspinLogoActions.setSpinLogo(element.currentTarget.checked)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"まわっているかどうかフラグ\"\n\t\t\t\t/>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>カウントアップ</Typography>\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\tlabel=\"カウント\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(countActions.setCount(Number(element.currentTarget.value)))\n\t\t\t\t\t}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={countState.count}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\tlabel=\"パーセント\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tcountActions.setShowingPercent(\n\t\t\t\t\t\t\t\tNumber(element.currentTarget.value)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={countState.percent}\n\t\t\t\t/>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>設定の保存と復元</Typography>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tdispatch(saveLocalStorage({ appState, spinLogoState, countState }))\n\t\t\t\t\t}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t設定の保存\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => dispatch(loadLocalStorage())}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t設定のロード\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\tonClick={() => dispatch(clearLocalStorage())}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t設定のクリア\n\t\t\t\t</Button>\n\t\t\t</DividedDiv>\n\t\t</>\n\t);\n};\n\nexport default ConfigPage;\n","import ConfigPage from \"./ConfigPage\";\n\nexport default ConfigPage;\n","import { useState } from \"react\";\n\n/**\n * フック\n *\n * @param カラーピッカーの初期色\n * @returns カラーピッカーを表示するかのフラグと、カラーピッカーのカラー保持用変数\n */\nexport const useShowColorPicker = (): {\n\tshowColorPicker: boolean;\n\tsetShowColorPicker: (showColorPicker: boolean) => void;\n} => {\n\tconst [showColorPicker, setShowColorPicker] = useState(false);\n\n\treturn { showColorPicker, setShowColorPicker };\n};\n","import styled from \"@emotion/styled\";\nimport { Button, CircularProgress, Slider, Typography } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/count\";\nimport { RootState } from \"../../redux/store\";\nimport fetchLastCounter from \"../../redux/thunk/fetchCounter\";\n\n/** 良い幅のスライダー */\nconst GoodWidthSlider = styled(Slider)`\n\tmax-width: 50%;\n`;\n\nconst Count: React.VFC = () => {\n\tconst { countState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<p>{countState.count}</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.increment());\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t増やす\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.decrement());\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t減らす\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Typography id=\"percent-slider-label\">\n\t\t\t\t確率：{countState.percent}%\n\t\t\t</Typography>\n\t\t\t<GoodWidthSlider\n\t\t\t\taria-labelledby=\"percent-slider-label\"\n\t\t\t\tdisabled={countState.progress}\n\t\t\t\tmax={100}\n\t\t\t\tmin={0}\n\t\t\t\tonChange={(e, newValue) => {\n\t\t\t\t\tif (typeof newValue === \"number\") {\n\t\t\t\t\t\tdispatch(actions.setShowingPercent(newValue));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalue={countState.percent}\n\t\t\t\tvalueLabelDisplay=\"off\"\n\t\t\t/>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"info\"\n\t\t\t\t\tdisabled={countState.progress}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tfetchLastCounter({\n\t\t\t\t\t\t\t\tpercent: countState.percent,\n\t\t\t\t\t\t\t\tvalue: 100,\n\t\t\t\t\t\t\t\tsecond: 3,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t非同期\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Typography color=\"error\">{countState.message}</Typography>\n\t\t\t{countState.progress && <CircularProgress />}\n\t\t</>\n\t);\n};\n\nexport default Count;\n","import Count from \"./Count\";\n\nexport default Count;\n","import HelpPage from \"./HelpPage\";\n\nexport default HelpPage;\n","const HelpPage: React.VFC = () => (\n\t<>\n\t\t「\n\t\t<a href=\"https://github.com/nishidemasami/study-react\">\n\t\t\thttps://github.com/nishidemasami/study-react\n\t\t</a>\n\t\t」を参照して下さい\n\t</>\n);\n\nexport default HelpPage;\n","import SiteMap from \"./SiteMap\";\n\nexport default SiteMap;\n","import {\n\tBox,\n\tButton,\n\tCardActions,\n\tCardContent,\n\tTypography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { SitemapCard } from \"../Common/Styled\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst SiteMap: React.VFC = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Box sx={{ flexGrow: 1, overflow: \"hidden\", px: 3 }}>\n\t\t\t{menuList\n\t\t\t\t.map((menu) => ({ menu, site: MenuItems[menu] }))\n\t\t\t\t.map(({ menu, site }) => (\n\t\t\t\t\t<SitemapCard\n\t\t\t\t\t\tkey={site.name}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tminWidth: 275,\n\t\t\t\t\t\t\tmaxWidth: \"75%\",\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\tpx: 3,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\tsx={{ fontSize: 14 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tページ\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"div\" variant=\"h5\">\n\t\t\t\t\t\t\t\t{site.icon}\n\t\t\t\t\t\t\t\t{site.name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"body2\">{site.description}</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t移動\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</SitemapCard>\n\t\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default SiteMap;\n","import { keyframes } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { Button } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/spinLogo\";\nimport { RootState } from \"../../redux/store\";\nimport { getRandomColor } from \"../../utils/HTMLUtils\";\nimport { ReactComponent as Logo } from \"./logo.svg\";\n\n/** まわるLogoのプロパティ */\ntype RollingLogoProps = {\n\t/** まわるLogoの色 */\n\tlogoColor: string;\n};\n\n/** まわるLogoのkeyframes */\nconst RollingLogoKeyframes = keyframes`\n\tfrom {\n\t\ttransform: rotate(0deg);\n\t}\n\tto {\n\t\ttransform: rotate(360deg);\n\t}\n`;\n\n/** まわるLogo */\nconst RollingLogo = styled(Logo)<RollingLogoProps>`\n\theight: 40vmin;\n\tpointer-events: none;\n\n\t&[data-spinning=\"true\"] {\n\t\tanimation: ${RollingLogoKeyframes} infinite 1s linear;\n\t}\n\n\tfill: ${(props) => props.logoColor};\n`;\n\nconst SpinLogo: React.VFC = () => {\n\tconst { spinLogoState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\t<RollingLogo\n\t\t\t\t\tdata-spinning={spinLogoState.spin}\n\t\t\t\t\tlogoColor={spinLogoState.logoColor}\n\t\t\t\t/>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.setSpinLogo(!spinLogoState.spin));\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t{spinLogoState.spin ? \"止める\" : \"まわす\"}\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.setLogoColor(getRandomColor()));\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t色をランダムに変える\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t</>\n\t);\n};\n\nexport default SpinLogo;\n","import SpinLogo from \"./SpinLogo\";\n\nexport default SpinLogo;\n","import WelcomePage from \"./WelcomePage\";\n\nexport default WelcomePage;\n","import {\n\tBox,\n\tButton,\n\tCardActions,\n\tCardContent,\n\tTypography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { DividedDiv, SitemapCard } from \"../Common/Styled\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst WelcomePage: React.VFC = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>このページはReact練習用ページです。</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t左上のメニューボタン、もしくは以下の一覧から各機能を利用できます。\n\t\t\t\t</Typography>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>機能一覧</Typography>\n\n\t\t\t\t<Box sx={{ flexGrow: 1, overflow: \"hidden\", px: 3 }}>\n\t\t\t\t\t{menuList\n\t\t\t\t\t\t.map((menu) => ({ menu, site: MenuItems[menu] }))\n\t\t\t\t\t\t.map(({ menu, site }) => (\n\t\t\t\t\t\t\t<SitemapCard\n\t\t\t\t\t\t\t\tkey={site.name}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tminWidth: 275,\n\t\t\t\t\t\t\t\t\tmaxWidth: \"75%\",\n\t\t\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\t\t\tpx: 3,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: 14 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tページ\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"div\" variant=\"h5\">\n\t\t\t\t\t\t\t\t\t\t{site.icon}\n\t\t\t\t\t\t\t\t\t\t{site.name}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\">{site.description}</Typography>\n\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t移動\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</SitemapCard>\n\t\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>\n\t\t\t\t\t詳しくは「\n\t\t\t\t\t<a href=\"https://github.com/nishidemasami/study-react\">\n\t\t\t\t\t\thttps://github.com/nishidemasami/study-react\n\t\t\t\t\t</a>\n\t\t\t\t\t」を参照して下さい。\n\t\t\t\t</Typography>\n\t\t\t</DividedDiv>\n\t\t</>\n\t);\n};\n\nexport default WelcomePage;\n","import {\n\tAutorenew,\n\tHelp,\n\tHome,\n\tMap,\n\tPlusOne,\n\tSettings,\n\tToll,\n} from \"@mui/icons-material\";\nimport { menuComponents } from \"../../redux/state/app\";\nimport Bitcoin from \"../Bitcoin\";\nimport ConfigPage from \"../ConfigPage\";\nimport Count from \"../Count\";\nimport HelpPage from \"../HelpPage\";\nimport SiteMap from \"../SiteMap\";\nimport SpinLogo from \"../SpinLogo\";\nimport WelcomePage from \"../WelcomePage\";\n\n/**\n * メニューアイテム一覧\n */\nconst MenuItems: {\n\t[menu in menuComponents]: {\n\t\tcomponent: JSX.Element;\n\t\tname: string;\n\t\ticon: JSX.Element;\n\t\tdescription: React.ReactNode;\n\t};\n} = {\n\tcount: {\n\t\tcomponent: <Count />,\n\t\tname: \"カウントアップ\",\n\t\ticon: <PlusOne />,\n\t\tdescription: \"数を数えるページです。\",\n\t},\n\tspinLogo: {\n\t\tcomponent: <SpinLogo />,\n\t\tname: \"ロゴまわし\",\n\t\ticon: <Autorenew />,\n\t\tdescription: \"Reactのロゴをまわすページです。\",\n\t},\n\thelpPage: {\n\t\tcomponent: <HelpPage />,\n\t\tname: \"ヘルプ\",\n\t\ticon: <Help />,\n\t\tdescription: \"ヘルプページです。\",\n\t},\n\twelcomePage: {\n\t\tcomponent: <WelcomePage />,\n\t\tname: \"ようこそ\",\n\t\ticon: <Home />,\n\t\tdescription: (\n\t\t\t<>\n\t\t\t\t最初に表示されるページです。\n\t\t\t\t<br />\n\t\t\t\tデフォルトの初期ページです。\n\t\t\t</>\n\t\t),\n\t},\n\tconfigPage: {\n\t\tcomponent: <ConfigPage />,\n\t\tname: \"設定\",\n\t\ticon: <Settings />,\n\t\tdescription: \"Stateの値を直接変更するページです。\",\n\t},\n\tsiteMap: {\n\t\tcomponent: <SiteMap />,\n\t\tname: \"サイトマップ\",\n\t\ticon: <Map />,\n\t\tdescription: \"サイトマップです。\",\n\t},\n\tbitcoin: {\n\t\tcomponent: <Bitcoin />,\n\t\tname: \"ビットコイン\",\n\t\ticon: <Toll />,\n\t\tdescription: (\n\t\t\t<>\n\t\t\t\tビットコインアドレスを\n\t\t\t\t<br />\n\t\t\t\t生成するページです。\n\t\t\t</>\n\t\t),\n\t},\n};\n\nexport default MenuItems;\n","import AppBar from \"./AppBar\";\n\nexport default AppBar;\n","import { Home, Menu } from \"@mui/icons-material\";\nimport { AppBar, Box, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { RootState } from \"../../redux/store\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst AppBarComponent: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={() => dispatch(actions.setOpenMenu(!appState.openMenu))}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tsx={{ mr: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography component=\"div\" sx={{ flexGrow: 1 }} variant=\"h6\">\n\t\t\t\t\t\t{appState.component && MenuItems[appState.component].name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={() => dispatch(actions.setComponent(menuList[0]))}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tsx={{ mr: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n};\n\nexport default AppBarComponent;\n","import Menu from \"./Menu\";\n\nexport default Menu;\n","import { Cancel } from \"@mui/icons-material\";\nimport {\n\tDivider,\n\tDrawer,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n} from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { RootState } from \"../../redux/store\";\nimport MenuItems from \"./MenuItems\";\n\nconst Menu: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Drawer\n\t\t\tanchor=\"left\"\n\t\t\tonClose={() => dispatch(actions.setOpenMenu(false))}\n\t\t\topen={appState.openMenu}\n\t\t>\n\t\t\t<div\n\t\t\t\tonKeyDown={() => dispatch(actions.setOpenMenu(false))}\n\t\t\t\trole=\"presentation\"\n\t\t\t>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(actions.setOpenMenu(false));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Cancel />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"閉じる\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<List>\n\t\t\t\t\t{menuList.map((menu) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tkey={menu}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdispatch(actions.setComponent(menu));\n\t\t\t\t\t\t\t\tdispatch(actions.setOpenMenu(false));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>{MenuItems[menu].icon}</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={MenuItems[menu].name} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</Drawer>\n\t);\n};\n\nexport default Menu;\n","import styled from \"@emotion/styled\";\nimport { Toolbar } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { RootState } from \"../../redux/store\";\nimport { init } from \"../../redux/thunk/app\";\nimport { saveLocalStorage } from \"../../redux/thunk/localStorage\";\nimport AppBar from \"../AppBar\";\nimport Menu from \"../Menu\";\nimport MenuItems from \"../Menu/MenuItems\";\n\n/** アプリケーションのdiv */\nconst AppDiv = styled.div`\n\ttext-align: center;\n\tp {\n\t\tmargin: 2px;\n\t}\n\ta {\n\t\tcolor: #004457;\n\t}\n`;\n\n/** メインコンテンツ */\nconst MainContents = styled.div`\n\tposition: absolute;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: calc(10px + 2vmin);\n\tcolor: black;\n`;\n\nconst App: React.VFC = () => {\n\tconst { appState, countState, spinLogoState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\tReact.useEffect(() => {\n\t\tdispatch(init());\n\t}, [dispatch]);\n\n\tReact.useEffect(() => {\n\t\tdispatch(saveLocalStorage({ appState, countState, spinLogoState }));\n\t}, [dispatch, appState, countState, spinLogoState]);\n\n\treturn (\n\t\t<React.StrictMode>\n\t\t\t<AppBar />\n\t\t\t<AppDiv>\n\t\t\t\t<Toolbar />\n\t\t\t\t<MainContents>\n\t\t\t\t\t{appState.component && MenuItems[appState.component].component}\n\t\t\t\t</MainContents>\n\t\t\t</AppDiv>\n\t\t\t<Menu />\n\t\t</React.StrictMode>\n\t);\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReducer from \"./state/app\";\nimport bitcoinReducer from \"./state/bitcoin\";\nimport countReducer from \"./state/count\";\nimport spinLogoReducer from \"./state/spinLogo\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tcountState: countReducer,\n\t\tappState: appReducer,\n\t\tspinLogoState: spinLogoReducer,\n\t\tbitcoinState: bitcoinReducer,\n\t},\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}