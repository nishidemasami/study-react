{"version":3,"sources":["utils/Uint8ArrayUtils.ts","redux/hooks.ts","redux/state/app.ts","redux/thunk/fetchCounter.ts","redux/state/count.ts","redux/state/spinLogo.ts","redux/thunk/localStorage.ts","redux/thunk/app.ts","components/Common/Styled.tsx","redux/state/bitcoin.ts","utils/Base58Utils.ts","utils/Bech32Utils.ts","utils/BitcoinUtils.ts","components/SpinLogo/logo.svg","components/Bitcoin/Bitcoin.hooks.ts","components/Bitcoin/index.ts","components/Bitcoin/Bitcoin.tsx","utils/HTMLUtils.ts","components/ConfigPage/hooks.ts","components/ConfigPage/ConfigPage.tsx","components/ConfigPage/index.ts","components/Count/Count.tsx","components/Count/index.ts","components/HelpPage/index.ts","components/HelpPage/HelpPage.tsx","components/SiteMap/index.ts","components/SiteMap/SiteMap.tsx","components/SpinLogo/SpinLogo.tsx","components/SpinLogo/index.ts","components/WelcomePage/index.ts","components/WelcomePage/WelcomePage.tsx","redux/state/whiteNoise.ts","components/WhiteNoise/WhiteNoise.tsx","components/WhiteNoise/index.ts","components/Menu/MenuItems.tsx","components/AppBar/index.ts","components/AppBar/AppBar.tsx","components/Menu/index.ts","components/Menu/Menu.tsx","components/App/App.tsx","redux/state/cube.ts","utils/BrowserUtils.ts","redux/store.ts","index.tsx"],"names":["Uint8ArrayToNumberArray","prm","result","forEach","value","push","useDispatch","dispatch","useSelector","selector","menuList","initialState","openMenu","component","undefined","backgroundColor","appSlice","createSlice","name","reducers","setOpenMenu","state","action","payload","setComponent","setBackgroundColor","parseJSON","JSON","parse","key","find","menu","actions","appReducer","reducer","judgment","percent","second","a","Promise","resolve","reject","setTimeout","Math","random","Error","fetchCounter","createAsyncThunk","arg","thunk","setProgress","catch","res","count","countSlice","message","progress","setShowingPercent","setMessasge","setCount","increment","decrement","incrementByAmount","extraReducers","builder","addCase","fetchLastCounter","pending","meta","fulfilled","rejected","countReducer","spinLogoSlice","spin","logoColor","setSpinLogo","setLogoColor","spinLogoReducer","localStorageKeyPrefix","localStorageKeyList","loadLocalStorage","localStorageKey","savedStateData","localStorage","getItem","countActions","spinLogoActions","saveLocalStorage","appState","setItem","stringify","countState","spinLogoState","clearLocalStorage","removeItem","init","appActions","DividedDiv","styled","div","WordWrapP","p","SitemapCard","Card","BitcoinSlice","publicKey","secretKey","bitcoinAddress","bitcoinAddressBECH32","wif","setPublicKey","setSecretKey","setWif","setBitcoinAddress","setBitcoinAddressBECH32","BitcoinReducer","bytesToHex","uint8a","hex","i","length","toString","padStart","COMMON_B58_ALPHABET","alphabet","ipfs","btc","xmr","flickr","xrp","base58encode","prmSource","source","prmType","ype","toLowerCase","TextEncoder","encode","Uint8Array","split","map","c","charCodeAt","slice","hasOwnProperty","letters","x","BigInt","output","mod","Number","reverse","join","ALPHABET","ALPHABET_MAP","z","charAt","polymodStep","pre","b","prefixChk","prefix","chk","v","convert","data","inBits","outBits","pad","bits","maxV","toWords","bytes","fromWords","words","Array","isArray","getLibraryFromEncoding","encoding","ENCODING_CONST","decode","str","LIMIT","prmStr","lowered","uppered","toUpperCase","lastIndexOf","wordChars","__decode","prmPrefix","TypeError","sha256","crypto","createHash","update","digest","ripemd160","base58WithChecksum","set","calcChecksum","_g","useBitcoinAddress","useCallback","privKey","msg","randomBytes","secp256k1","privateKeyVerify","pubKey","publicKeyCreate","sigObj","ecdsaSign","ecdsaVerify","signature","ripemded160payload","genBitcoinAddress","privateKey","genWif","Bitcoin","bitcoinState","shallowEqual","Button","color","onClick","variant","HTMLColorCodeRegex","checkHTMLColor","test","useShowColorPicker","useState","showColorPicker","setShowColorPicker","GoodMarginTextField","TextField","NoMarginPaper","Paper","ConfigPage","showAppStateBackgroundColorPicker","setShowAppStateBackgroundColorColorPicker","Typography","error","label","onChange","element","currentTarget","required","type","Dialog","PaperComponent","onClose","open","FormControlLabel","control","Checkbox","checked","GoodWidthSlider","Slider","Count","id","disabled","max","min","e","newValue","valueLabelDisplay","CircularProgress","HelpPage","href","SiteMap","Box","sx","flexGrow","overflow","px","site","MenuItems","minWidth","maxWidth","CardContent","gutterBottom","fontSize","icon","description","CardActions","onKeyPress","size","_excluded","_extends","Object","assign","target","arguments","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","cx","cy","r","ForwardRef","RollingLogoKeyframes","keyframes","RollingLogo","Logo","SpinLogo","floor","WelcomePage","whiteNoiseSlice","volume","playing","setVolume","setPlaying","whiteNoiseReducer","WhiteNoise","whiteNoiseState","React","audioContext","setAudioContext","gainNode","setGainNode","setSource","useEffect","newAudioContext","window","AudioContext","webkitAudioContext","newGainNode","createGain","stop","buffer","close","onClickToStartAndStop","frameCount","sampleRate","myArrayBuffer","createBuffer","channel","nowBuffering","getChannelData","gain","bufferSource","createBufferSource","loop","connect","destination","start","VolumeDown","event","VolumeUp","PlusOne","spinLogo","Autorenew","whiteNoise","Audiotrack","helpPage","Help","welcomePage","Home","configPage","Settings","siteMap","Map","bitcoin","Toll","AppBar","position","Toolbar","IconButton","edge","mr","Menu","Drawer","anchor","onKeyDown","role","List","ListItem","button","ListItemIcon","Cancel","ListItemText","primary","Divider","AppDiv","MainContents","MinToolbar","App","StrictMode","absolute","alpha","beta","gamma","degrees","deviceOrientationPermitted","navigator","userAgent","cubeSlice","setAbsolute","setAlpha","setBeta","setGamma","setDegrees","setDeviceOrientationPermitted","cubeReducer","store","configureStore","bitcoinReducer","cubeState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d509c48a.chunk.js","sourcesContent":["export function Uint8ArrayToHex(prm: Uint8Array): string {\n\treturn Buffer.from(prm.buffer).toString(\"hex\");\n}\n\nexport function Uint8ArrayToNumberArray(prm: Uint8Array): number[] {\n\tconst result: number[] = [];\n\tprm.forEach((value) => result.push(value));\n\treturn result;\n}\n","import {\n\tTypedUseSelectorHook,\n\tuseDispatch as dispatch,\n\tuseSelector as selector,\n} from \"react-redux\";\nimport { RootState, store } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useDispatch = () => dispatch<typeof store.dispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n/** メニューリスト */\nexport const menuList = [\n\t\"welcomePage\",\n\t\"count\",\n\t\"spinLogo\",\n\t\"whiteNoise\",\n\t\"bitcoin\",\n\t\"configPage\",\n\t\"siteMap\",\n\t\"helpPage\",\n] as const;\n\n/** メニュー一覧タイプ */\nexport type menuComponents = typeof menuList[number];\n\n// Define a type for the slice state\nexport interface AppState {\n\t/** メニューを表示するかどうか */\n\topenMenu: boolean;\n\t/** 表示するコンポーネント */\n\tcomponent?: menuComponents;\n\t/** メインコンテンツの背景色 */\n\tbackgroundColor: string;\n}\n\n// Define the initial state using that type\nconst initialState: AppState = {\n\topenMenu: false,\n\tcomponent: undefined,\n\tbackgroundColor: \"#e6eeff\",\n};\n\nconst appSlice = createSlice({\n\tname: \"app\",\n\tinitialState,\n\treducers: {\n\t\tsetOpenMenu: (state, action: PayloadAction<typeof state.openMenu>) => {\n\t\t\tstate.openMenu = action.payload;\n\t\t},\n\t\tsetComponent: (state, action: PayloadAction<typeof state.component>) => {\n\t\t\tstate.component = action.payload;\n\t\t},\n\t\tsetBackgroundColor: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<typeof state.backgroundColor>\n\t\t) => {\n\t\t\tstate.backgroundColor = action.payload;\n\t\t},\n\t\tparseJSON: (state, action: PayloadAction<string>) => {\n\t\t\t[state.component] = menuList;\n\t\t\tJSON.parse(action.payload, (key, value) => {\n\t\t\t\tif (key === \"openMenu\" && typeof value === \"boolean\") {\n\t\t\t\t\tstate.openMenu = value;\n\t\t\t\t} else if (\n\t\t\t\t\tkey === \"component\" &&\n\t\t\t\t\tmenuList.find((menu) => menu === value)\n\t\t\t\t) {\n\t\t\t\t\tstate.component = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = appSlice;\n\nconst appReducer = appSlice.reducer;\nexport default appReducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { actions } from \"../state/count\";\n\n/**\n * 遅延判定メソッド\n * @param percent 確率\n * @param second 秒数\n * @remarks\n * second秒後にpercent%の確率でtrueを返し、\n * でなければrejectする\n */\nconst judgment = async (percent: number, second: number) =>\n\tnew Promise<boolean>((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tif (Math.random() < percent / 100) {\n\t\t\t\tresolve(true);\n\t\t\t}\n\t\t\treject(new Error());\n\t\t}, second * 1000);\n\t});\n\ntype fetchCounterArgType = {\n\t/** 増える確率 */\n\tpercent: number;\n\t/** 秒数 */\n\tsecond: number;\n\t/** 値 */\n\tvalue: number;\n};\n\ntype fetchCounterReturnType = {\n\t/** 増減値 */\n\tcount: number;\n};\n\n/**\n * 遅延増減メソッド\n * @remarks\n * 渡された秒数後に渡された確率で渡された値を返し、\n * でなければ例外を返す\n */\nconst fetchCounter = createAsyncThunk<\n\tfetchCounterReturnType,\n\tfetchCounterArgType\n>(\"lastcount/fetch\", async (arg, thunk): Promise<fetchCounterReturnType> => {\n\tthunk.dispatch(actions.setProgress(true));\n\n\tconst res = await judgment(arg.percent, arg.second).catch(() => false);\n\n\tthunk.dispatch(actions.setProgress(false));\n\n\tif (res) {\n\t\treturn { count: arg.value };\n\t}\n\n\tthrow new Error(\"fetch count error\");\n});\n\nexport default fetchCounter;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport fetchLastCounter from \"../thunk/fetchCounter\";\n\n// Define a type for the slice state\nexport interface CounterState {\n\t/** 表示するメッセージ */\n\tmessage: string;\n\t/** プログレスフラグ */\n\tprogress: boolean;\n\t/** カウント値 */\n\tcount: number;\n\t/** 確率 */\n\tpercent: number;\n}\n\n// Define the initial state using that type\nconst initialState: CounterState = {\n\tmessage: \"\",\n\tprogress: false,\n\tcount: 0,\n\tpercent: 50,\n};\nconst countSlice = createSlice({\n\tname: \"count\",\n\tinitialState,\n\treducers: {\n\t\t/** 確率を設定する */\n\t\tsetShowingPercent: (state, action: PayloadAction<number>) => {\n\t\t\tstate.percent = action.payload;\n\t\t},\n\t\tsetProgress: (state, action: PayloadAction<boolean>) => {\n\t\t\tstate.progress = action.payload;\n\t\t},\n\t\tsetMessasge: (state, action: PayloadAction<string>) => {\n\t\t\tstate.message = action.payload;\n\t\t},\n\t\tsetCount: (state, action: PayloadAction<typeof state.count>) => {\n\t\t\tstate.count = action.payload;\n\t\t},\n\t\tincrement: (state) => {\n\t\t\tstate.count += 1;\n\t\t},\n\t\tdecrement: (state) => {\n\t\t\tstate.count -= 1;\n\t\t},\n\t\tincrementByAmount: (state, action: PayloadAction<number>) => {\n\t\t\tstate.count += action.payload;\n\t\t},\n\t\tparseJSON: (state, action: PayloadAction<string>) => {\n\t\t\tJSON.parse(action.payload, (key, value) => {\n\t\t\t\tif (key === \"count\" && typeof value === \"number\") {\n\t\t\t\t\tstate.count = value;\n\t\t\t\t} else if (key === \"percent\" && typeof value === \"number\") {\n\t\t\t\t\tstate.percent = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(fetchLastCounter.pending, (state, action) => ({\n\t\t\t...state,\n\t\t\tmessage: `判定中です。${action.meta.arg.second}秒後に${action.meta.arg.percent}%の確率で${action.meta.arg.value}増えます。`,\n\t\t}));\n\t\tbuilder.addCase(fetchLastCounter.fulfilled, (state, action) => ({\n\t\t\t...state,\n\t\t\tcount: state.count + action.payload.count,\n\t\t\tmessage: `判定に成功しました。${action.payload.count}増えました。`,\n\t\t}));\n\t\tbuilder.addCase(fetchLastCounter.rejected, (state) => ({\n\t\t\t...state,\n\t\t\tmessage: \"判定に失敗しました。1減りました。\",\n\t\t\tcount: state.count - 1,\n\t\t}));\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = countSlice;\n\nconst countReducer = countSlice.reducer;\nexport default countReducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// Define a type for the slice state\nexport interface SpinLogoState {\n\t/** ロゴ回転フラグ */\n\tspin: boolean;\n\t/** ロゴの色 */\n\tlogoColor: string;\n}\n\n// Define the initial state using that type\nconst initialState: SpinLogoState = {\n\tspin: false,\n\tlogoColor: \"#61DAFB\",\n};\nconst spinLogoSlice = createSlice({\n\tname: \"spinLogo\",\n\tinitialState,\n\treducers: {\n\t\tsetSpinLogo: (state, action: PayloadAction<typeof state.spin>) => {\n\t\t\tstate.spin = action.payload;\n\t\t},\n\t\tsetLogoColor: (state, action: PayloadAction<typeof state.logoColor>) => {\n\t\t\tstate.logoColor = action.payload;\n\t\t},\n\t\tparseJSON: (state, action: PayloadAction<string>) => {\n\t\t\tJSON.parse(action.payload, (key, value) => {\n\t\t\t\tif (key === \"logoColor\" && typeof value === \"string\") {\n\t\t\t\t\tstate.logoColor = value;\n\t\t\t\t} else if (key === \"spin\" && typeof value === \"boolean\") {\n\t\t\t\t\tstate.spin = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = spinLogoSlice;\n\nconst spinLogoReducer = spinLogoSlice.reducer;\nexport default spinLogoReducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { AppState } from \"../state/app\";\nimport { actions as countActions, CounterState } from \"../state/count\";\nimport { actions as spinLogoActions, SpinLogoState } from \"../state/spinLogo\";\n\ntype saveLocalStorageArgType = {\n\tappState?: AppState;\n\tcountState?: CounterState;\n\tspinLogoState?: SpinLogoState;\n};\n\nconst localStorageKeyPrefix = \"study-react/\";\nconst localStorageKeyList = [\n\t`${localStorageKeyPrefix}appState`,\n\t`${localStorageKeyPrefix}countState`,\n\t`${localStorageKeyPrefix}spinLogoState`,\n];\n\n/**\n * ローカルストレージから設定をロード\n */\nconst loadLocalStorage = createAsyncThunk<void, void>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (arg, thunk): Promise<void> => {\n\t\t[\n\t\t\t`${localStorageKeyPrefix}countState`,\n\t\t\t`${localStorageKeyPrefix}spinLogoState`,\n\t\t].forEach((localStorageKey) => {\n\t\t\t// ローカルストレージからStateを取得\n\t\t\tconst savedStateData = localStorage.getItem(localStorageKey);\n\t\t\tif (savedStateData === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (localStorageKey === `${localStorageKeyPrefix}countState`) {\n\t\t\t\tthunk.dispatch(countActions.parseJSON(savedStateData));\n\t\t\t} else if (localStorageKey === `${localStorageKeyPrefix}spinLogoState`) {\n\t\t\t\tthunk.dispatch(spinLogoActions.parseJSON(savedStateData));\n\t\t\t}\n\t\t});\n\t}\n);\n\n/**\n * ローカルストレージにStateを保存\n */\nconst saveLocalStorage = createAsyncThunk<void, saveLocalStorageArgType>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (arg): Promise<void> => {\n\t\t// ローカルストレージにStateを保存\n\t\tif (arg.appState) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`${localStorageKeyPrefix}appState`,\n\t\t\t\tJSON.stringify(arg.appState)\n\t\t\t);\n\t\t}\n\t\tif (arg.countState) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`${localStorageKeyPrefix}countState`,\n\t\t\t\tJSON.stringify(arg.countState)\n\t\t\t);\n\t\t}\n\t\tif (arg.spinLogoState) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`${localStorageKeyPrefix}spinLogoState`,\n\t\t\t\tJSON.stringify(arg.spinLogoState)\n\t\t\t);\n\t\t}\n\t}\n);\n\n/**\n * ローカルストレージをクリア\n */\nconst clearLocalStorage = createAsyncThunk<void, void>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (): Promise<void> => {\n\t\t// ローカルストレージをクリア\n\t\tlocalStorageKeyList.forEach((localStorageKey) =>\n\t\t\tlocalStorage.removeItem(localStorageKey)\n\t\t);\n\t}\n);\n\nexport {\n\tloadLocalStorage,\n\tsaveLocalStorage,\n\tclearLocalStorage,\n\tlocalStorageKeyPrefix,\n\tlocalStorageKeyList,\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { actions as appActions, menuList } from \"../state/app\";\nimport { actions as countActions } from \"../state/count\";\nimport { actions as spinLogoActions } from \"../state/spinLogo\";\nimport { localStorageKeyList, localStorageKeyPrefix } from \"./localStorage\";\n\n/**\n * アプリケーションの初期化\n */\nconst init = createAsyncThunk<void, void>(\n\t\"localStorage/loadLocalStorage\",\n\tasync (arg, thunk): Promise<void> => {\n\t\tthunk.dispatch(appActions.setComponent(menuList[0]));\n\t\tlocalStorageKeyList.forEach((localStorageKey) => {\n\t\t\t// ローカルストレージからStateを取得\n\t\t\tconst savedStateData = localStorage.getItem(localStorageKey);\n\n\t\t\tif (!savedStateData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (localStorageKey === `${localStorageKeyPrefix}appState`) {\n\t\t\t\tthunk.dispatch(appActions.parseJSON(savedStateData));\n\t\t\t} else if (localStorageKey === `${localStorageKeyPrefix}countState`) {\n\t\t\t\tthunk.dispatch(countActions.parseJSON(savedStateData));\n\t\t\t} else if (localStorageKey === `${localStorageKeyPrefix}spinLogoState`) {\n\t\t\t\tthunk.dispatch(spinLogoActions.parseJSON(savedStateData));\n\t\t\t}\n\t\t});\n\t}\n);\n\nexport { init };\n","import styled from \"@emotion/styled\";\nimport { Card } from \"@mui/material\";\n\nexport const DivLikeA = styled.div`\n\tcursor: pointer;\n\ttext-decoration: underline;\n\tdisplay: inline-block;\n`;\n\nexport const DividedDiv = styled.div`\n\tborder-top: 1px solid black;\n`;\n\nexport const CenteringDiv = styled.div`\n\ttext-align: center;\n\tjustify-content: center;\n\tdisplay: flex;\n`;\n\nexport const WordWrapP = styled.p`\n\tword-break: break-word;\n`;\n\nexport const SitemapCard = styled(Card)`\n\tmargin: 30px auto;\n\ttext-align: left;\n\twidth: fit-content;\n`;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// Define a type for the slice state\nexport interface BitcoinState {\n\t/**\n\t * 公開鍵\n\t * 65byteのバイト配列\n\t *  */\n\tpublicKey: number[];\n\t/**\n\t * 秘密鍵\n\t * 32byteのバイト配列\n\t *  */\n\tsecretKey: number[];\n\t/**\n\t * ビットコインアドレス\n\t * base58(P2PKH)形式\n\t *  */\n\tbitcoinAddress: string;\n\t/**\n\t * ビットコインアドレス\n\t * BECH32(P2WPKH)形式\n\t *  */\n\tbitcoinAddressBECH32: string;\n\t/**\n\t * 秘密鍵\n\t * WIF形式\n\t *  */\n\twif: string;\n}\n\n// Define the initial state using that type\nconst initialState: BitcoinState = {\n\tpublicKey: [],\n\tsecretKey: [],\n\tbitcoinAddress: \"\",\n\tbitcoinAddressBECH32: \"\",\n\twif: \"\",\n};\nconst BitcoinSlice = createSlice({\n\tname: \"bitcoin\",\n\tinitialState,\n\treducers: {\n\t\tsetPublicKey: (state, action: PayloadAction<typeof state.publicKey>) => {\n\t\t\tstate.publicKey = action.payload;\n\t\t},\n\t\tsetSecretKey: (state, action: PayloadAction<typeof state.secretKey>) => {\n\t\t\tstate.secretKey = action.payload;\n\t\t},\n\t\tsetWif: (state, action: PayloadAction<typeof state.wif>) => {\n\t\t\tstate.wif = action.payload;\n\t\t},\n\t\tsetBitcoinAddress: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<typeof state.bitcoinAddress>\n\t\t) => {\n\t\t\tstate.bitcoinAddress = action.payload;\n\t\t},\n\t\tsetBitcoinAddressBECH32: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<typeof state.bitcoinAddressBECH32>\n\t\t) => {\n\t\t\tstate.bitcoinAddressBECH32 = action.payload;\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = BitcoinSlice;\n\nconst BitcoinReducer = BitcoinSlice.reducer;\nexport default BitcoinReducer;\n","/*! micro-base58 - MIT License (c) 2021, Paul Miller (https://paulmillr.com) */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-prototype-builtins */\n/* eslint-disable no-plusplus */\n\nfunction bytesToHex(uint8a: Uint8Array): string {\n\t// pre-caching chars could speed this up 6x.\n\tlet hex = \"\";\n\tfor (let i = 0; i < uint8a.length; i++) {\n\t\thex += uint8a[i].toString(16).padStart(2, \"0\");\n\t}\n\treturn hex;\n}\n\ninterface Alphabets {\n\tipfs: string;\n\tbtc: string;\n\tflickr: string;\n\txmr: string;\n\txrp: string;\n}\n\nconst COMMON_B58_ALPHABET =\n\t\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n\nconst alphabet: Alphabets = {\n\tipfs: COMMON_B58_ALPHABET,\n\tbtc: COMMON_B58_ALPHABET,\n\txmr: COMMON_B58_ALPHABET,\n\tflickr: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\",\n\txrp: \"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\",\n};\n\nexport function base58encode(\n\tprmSource: string | Uint8Array,\n\tprmType: keyof Alphabets = \"ipfs\"\n): string {\n\tlet source: string | Uint8Array;\n\tconst ype: keyof Alphabets = prmType.toLowerCase() as keyof Alphabets;\n\tif (prmSource.length === 0) return \"\";\n\tif (typeof prmSource === \"string\") {\n\t\tif (typeof TextEncoder !== \"undefined\") {\n\t\t\tsource = new TextEncoder().encode(prmSource);\n\t\t} else {\n\t\t\t// note: only supports ASCII\n\t\t\tsource = new Uint8Array(prmSource.split(\"\").map((c) => c.charCodeAt(0)));\n\t\t}\n\t} else {\n\t\tsource = prmSource;\n\t}\n\n\tif (ype === \"xmr\") {\n\t\t// xmr ver is done in 8-byte blocks.\n\t\t// This gives us eight full-sized blocks and one 5-byte block.\n\t\t// Eight bytes converts to 11 or less Base58 characters;\n\t\t// if a particular block converts to <11 characters,\n\t\t// the conversion pads it with \"1\"s (1 is 0 in Base58).\n\t\t// Likewise, the final 5-byte block can convert to 7 or less Base58 digits;\n\t\t// the conversion will ensure the result is 7 digits. Due to the conditional padding,\n\t\t// the 69-byte string will always convert to 95 Base58 characters (8 * 11 + 7).\n\t\tlet res = \"\";\n\t\tfor (let i = 0; i < source.length + 3; i += 8) {\n\t\t\tconst slice = source.slice(i, i + 8);\n\t\t\tres += base58encode(slice).padStart(slice.length === 8 ? 11 : 7, \"1\");\n\t\t}\n\t\treturn res;\n\t}\n\tif (!alphabet.hasOwnProperty(ype)) throw new Error(\"invalid type\");\n\tconst letters = alphabet[ype];\n\n\t// Convert Uint8Array to BigInt, Big Endian.\n\tlet x = BigInt(`0x${bytesToHex(source)}`);\n\tconst output = [];\n\n\twhile (x > 0) {\n\t\tconst mod = Number(x % 58n);\n\t\tx /= 58n;\n\t\toutput.push(letters[mod]);\n\t}\n\n\tfor (let i = 0; source[i] === 0; i++) {\n\t\toutput.push(letters[0]);\n\t}\n\n\treturn output.reverse().join(\"\");\n}\n\nexport function decode(\n\toutput: string,\n\ttype: keyof Alphabets = \"ipfs\"\n): Uint8Array {\n\tif (output.length === 0) return new Uint8Array([]);\n\tconst letters = alphabet[type];\n\tconst bytes = [0];\n\tfor (let i = 0; i < output.length; i++) {\n\t\tconst char = output[i];\n\t\tconst value = letters.indexOf(char);\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t`base58.decode received invalid input. Character '${char}' is not in the base58 alphabet.`\n\t\t\t);\n\t\t}\n\t\tfor (let j = 0; j < bytes.length; j++) {\n\t\t\tbytes[j] *= 58;\n\t\t}\n\t\tbytes[0] += value;\n\t\tlet carry = 0;\n\t\tfor (let j = 0; j < bytes.length; j++) {\n\t\t\tbytes[j] += carry;\n\t\t\tcarry = bytes[j] >> 8;\n\t\t\tbytes[j] &= 0xff;\n\t\t}\n\t\twhile (carry > 0) {\n\t\t\tbytes.push(carry & 0xff);\n\t\t\tcarry >>= 8;\n\t\t}\n\t}\n\tfor (let i = 0; i < output.length && output[i] === \"1\"; i++) {\n\t\tbytes.push(0);\n\t}\n\treturn new Uint8Array(bytes.reverse());\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-underscore-dangle */\n/*! MIT License (c) 2021, Peter Wuille (https://github.com/sipa/bech32) */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-prototype-builtins */\n/* eslint-disable no-plusplus */\n\nconst ALPHABET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\n\nconst ALPHABET_MAP: { [key: string]: number } = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n\tconst x = ALPHABET.charAt(z);\n\tALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre: number): number {\n\tconst b = pre >> 25;\n\treturn (\n\t\t((pre & 0x1ffffff) << 5) ^\n\t\t(-((b >> 0) & 1) & 0x3b6a57b2) ^\n\t\t(-((b >> 1) & 1) & 0x26508e6d) ^\n\t\t(-((b >> 2) & 1) & 0x1ea119fa) ^\n\t\t(-((b >> 3) & 1) & 0x3d4233dd) ^\n\t\t(-((b >> 4) & 1) & 0x2a1462b3)\n\t);\n}\n\nfunction prefixChk(prefix: string): number | string {\n\tlet chk = 1;\n\tfor (let i = 0; i < prefix.length; ++i) {\n\t\tconst c = prefix.charCodeAt(i);\n\t\tif (c < 33 || c > 126) return `Invalid prefix (${prefix})`;\n\n\t\tchk = polymodStep(chk) ^ (c >> 5);\n\t}\n\tchk = polymodStep(chk);\n\n\tfor (let i = 0; i < prefix.length; ++i) {\n\t\tconst v = prefix.charCodeAt(i);\n\t\tchk = polymodStep(chk) ^ (v & 0x1f);\n\t}\n\treturn chk;\n}\n\nfunction convert(\n\tdata: ArrayLike<number>,\n\tinBits: number,\n\toutBits: number,\n\tpad: boolean\n): number[] {\n\tlet value = 0;\n\tlet bits = 0;\n\tconst maxV = (1 << outBits) - 1;\n\n\tconst result: number[] = [];\n\tfor (let i = 0; i < data.length; ++i) {\n\t\tvalue = (value << inBits) | data[i];\n\t\tbits += inBits;\n\n\t\twhile (bits >= outBits) {\n\t\t\tbits -= outBits;\n\t\t\tresult.push((value >> bits) & maxV);\n\t\t}\n\t}\n\n\tif (pad) {\n\t\tif (bits > 0) {\n\t\t\tresult.push((value << (outBits - bits)) & maxV);\n\t\t}\n\t} else {\n\t\tif (bits >= inBits) throw new Error(\"Excess padding\");\n\t\tif ((value << (outBits - bits)) & maxV) throw new Error(\"Non-zero padding\");\n\t}\n\n\treturn result;\n}\n\nfunction toWords(bytes: ArrayLike<number>): number[] {\n\treturn convert(bytes, 8, 5, true);\n}\n\n// function fromWordsUnsafe(words: ArrayLike<number>): number[] | undefined {\n// \tconst res = convert(words, 5, 8, false);\n// \tif (Array.isArray(res)) return res;\n// }\n\nfunction fromWords(words: ArrayLike<number>): number[] {\n\tconst res = convert(words, 5, 8, false);\n\tif (Array.isArray(res)) return res;\n\n\tthrow new Error(res);\n}\n\nfunction getLibraryFromEncoding(encoding: \"bech32\" | \"bech32m\"): BechLib {\n\tlet ENCODING_CONST: number;\n\tif (encoding === \"bech32\") {\n\t\tENCODING_CONST = 1;\n\t} else {\n\t\tENCODING_CONST = 0x2bc830a3;\n\t}\n\n\tfunction encode(\n\t\tprmPrefix: string,\n\t\twords: ArrayLike<number>,\n\t\tLIMIT = 90\n\t): string {\n\t\tif (prmPrefix.length + 7 + words.length > LIMIT)\n\t\t\tthrow new TypeError(\"Exceeds length limit\");\n\n\t\tconst prefix = prmPrefix.toLowerCase();\n\n\t\t// determine chk mod\n\t\tlet chk = prefixChk(prefix);\n\t\tif (typeof chk === \"string\") throw new Error(chk);\n\n\t\tlet result = `${prefix}1`;\n\t\tfor (let i = 0; i < words.length; ++i) {\n\t\t\tconst x = words[i];\n\t\t\tif (x >> 5 !== 0) {\n\t\t\t\tthrow new Error(`Non 5-bit word: ${x}`);\n\t\t\t}\n\n\t\t\tchk = polymodStep(chk) ^ x;\n\t\t\tresult += ALPHABET.charAt(x);\n\t\t}\n\n\t\tfor (let i = 0; i < 6; ++i) {\n\t\t\tchk = polymodStep(chk);\n\t\t}\n\t\tchk ^= ENCODING_CONST;\n\n\t\tfor (let i = 0; i < 6; ++i) {\n\t\t\tconst v = (chk >> ((5 - i) * 5)) & 0x1f;\n\t\t\tresult += ALPHABET.charAt(v);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction __decode(prmStr: string, LIMIT = 90): Decoded | string {\n\t\tif (prmStr.length < 8) return `${prmStr} too short`;\n\t\tif (prmStr.length > LIMIT) return \"Exceeds length limit\";\n\n\t\t// don't allow mixed case\n\t\tconst lowered = prmStr.toLowerCase();\n\t\tconst uppered = prmStr.toUpperCase();\n\t\tif (prmStr !== lowered && prmStr !== uppered)\n\t\t\treturn `Mixed-case string ${prmStr}`;\n\t\tconst str = lowered;\n\n\t\tconst split = str.lastIndexOf(\"1\");\n\t\tif (split === -1) return `No separator character for ${str}`;\n\t\tif (split === 0) return `Missing prefix for ${str}`;\n\n\t\tconst prefix = str.slice(0, split);\n\t\tconst wordChars = str.slice(split + 1);\n\t\tif (wordChars.length < 6) return \"Data too short\";\n\n\t\tlet chk = prefixChk(prefix);\n\t\tif (typeof chk === \"string\") return chk;\n\n\t\tconst words = [];\n\t\tfor (let i = 0; i < wordChars.length; ++i) {\n\t\t\tconst c = wordChars.charAt(i);\n\t\t\tconst v = ALPHABET_MAP[c];\n\t\t\tif (v === undefined) return `Unknown character ${c}`;\n\t\t\tchk = polymodStep(chk) ^ v;\n\n\t\t\t// not in the checksum?\n\t\t\tif (i + 6 >= wordChars.length) continue;\n\t\t\twords.push(v);\n\t\t}\n\n\t\tif (chk !== ENCODING_CONST) return `Invalid checksum for ${str}`;\n\t\treturn { prefix, words };\n\t}\n\n\t// function decodeUnsafe(str: string, LIMIT?: number): Decoded | undefined {\n\t// \tconst res = __decode(str, LIMIT);\n\t// \tif (typeof res === \"object\") return res;\n\t// }\n\n\tfunction decode(str: string, LIMIT?: number): Decoded {\n\t\tconst res = __decode(str, LIMIT);\n\t\tif (typeof res === \"object\") return res;\n\n\t\tthrow new Error(res);\n\t}\n\n\treturn {\n\t\t// decodeUnsafe,\n\t\tdecode,\n\t\tencode,\n\t\ttoWords,\n\t\t// fromWordsUnsafe,\n\t\tfromWords,\n\t};\n}\n\nexport const bech32 = getLibraryFromEncoding(\"bech32\");\nexport const bech32m = getLibraryFromEncoding(\"bech32m\");\nexport interface Decoded {\n\tprefix: string;\n\twords: number[];\n}\nexport interface BechLib {\n\t// decodeUnsafe: (\n\t// \tstr: string,\n\t// \tLIMIT?: number | undefined\n\t// ) => Decoded | undefined;\n\tdecode: (str: string, LIMIT?: number | undefined) => Decoded;\n\tencode: (\n\t\tprefix: string,\n\t\twords: ArrayLike<number>,\n\t\tLIMIT?: number | undefined\n\t) => string;\n\ttoWords: typeof toWords;\n\t// fromWordsUnsafe: typeof fromWordsUnsafe;\n\tfromWords: typeof fromWords;\n}\n","import crypto from \"crypto\";\nimport { base58encode } from \"./Base58Utils\";\nimport { bech32 } from \"./Bech32Utils\";\n\nfunction sha256(data: crypto.BinaryLike): Buffer {\n\treturn crypto.createHash(\"sha256\").update(data).digest();\n}\n\nfunction ripemd160(data: crypto.BinaryLike): Buffer {\n\treturn crypto.createHash(\"ripemd160\").update(data).digest();\n}\n\nfunction calcChecksum(data: crypto.BinaryLike) {\n\treturn sha256(sha256(data)).slice(0, 4);\n}\n\nfunction base58WithChecksum(data: Uint8Array) {\n\tconst result = new Uint8Array(data.length + 4);\n\tresult.set(data);\n\tresult.set(calcChecksum(data), data.length);\n\treturn base58encode(result);\n}\n\nexport function genBitcoinAddress(publicKey: Uint8Array): string {\n\tif (publicKey.length !== 65) {\n\t\tthrow new Error(\"publicKey is not 65 byte length Exception\");\n\t}\n\tconst sha256edpayload = sha256(publicKey);\n\tconst ripemded160payload = ripemd160(sha256edpayload);\n\n\tconst payload = new Uint8Array(21);\n\tpayload.set([0]);\n\tpayload.set(ripemded160payload, 1);\n\treturn base58WithChecksum(payload);\n}\n\nfunction bech32WithChecksum(data: Uint8Array) {\n\t// const result = new Uint8Array(data.length + 4);\n\t// result.set(data);\n\t// result.set(calcChecksum(data), data.length);\n\treturn bech32.encode(\"bc\", bech32.toWords(data));\n}\n\nexport function genBitcoinAddressBECH32(publicKey: Uint8Array): string {\n\tif (publicKey.length !== 65) {\n\t\tthrow new Error(\"publicKey is not 65 byte length Exception\");\n\t}\n\tconst sha256edpayload = sha256(publicKey);\n\tconst ripemded160payload = ripemd160(sha256edpayload);\n\n\tconst payload = new Uint8Array(21);\n\tpayload.set([0x00, 0x14]);\n\tpayload.set(ripemded160payload, 1);\n\treturn bech32WithChecksum(payload);\n}\n\nexport function genWif(privateKey: Uint8Array): string {\n\tconst payload = new Uint8Array(privateKey.length + 1);\n\tpayload.set([0x80]);\n\tpayload.set(privateKey, 1);\n\treturn base58WithChecksum(payload);\n}\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.193714bf.svg\";\nexport { ForwardRef as ReactComponent };","import { randomBytes } from \"crypto\";\nimport { useCallback } from \"react\";\nimport secp256k1 from \"secp256k1\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/bitcoin\";\nimport { genBitcoinAddress, genWif } from \"../../utils/BitcoinUtils\";\nimport { Uint8ArrayToNumberArray } from \"../../utils/Uint8ArrayUtils\";\n\nexport const useBitcoinAddress = (): (() => void) => {\n\tconst dispatch = useDispatch();\n\n\treturn useCallback(() => {\n\t\t// generate message to sign\n\t\t// message should have 32-byte length, if you have some other length you can hash message\n\t\t// for example `msg = sha256(rawMessage)`\n\t\tconst msg = randomBytes(32);\n\n\t\t// generate privKey\n\t\tlet privKey: Uint8Array;\n\t\tdo {\n\t\t\tprivKey = randomBytes(32);\n\t\t} while (!secp256k1.privateKeyVerify(privKey));\n\n\t\t// get the public key in a compressed format\n\t\tconst pubKey: Uint8Array = secp256k1.publicKeyCreate(privKey, false);\n\n\t\t// sign the message\n\t\tconst sigObj = secp256k1.ecdsaSign(msg, privKey);\n\n\t\t// verify the signature\n\t\tif (secp256k1.ecdsaVerify(sigObj.signature, msg, pubKey)) {\n\t\t\tdispatch(actions.setPublicKey(Uint8ArrayToNumberArray(pubKey)));\n\t\t\tdispatch(actions.setBitcoinAddress(genBitcoinAddress(pubKey)));\n\t\t\t// dispatch(\n\t\t\t// \tactions.setBitcoinAddressBECH32(genBitcoinAddressBECH32(pubKey))\n\t\t\t// );\n\t\t\tdispatch(actions.setWif(genWif(privKey)));\n\t\t} else {\n\t\t\tdispatch(actions.setPublicKey([]));\n\t\t\tdispatch(actions.setBitcoinAddress(\"\"));\n\t\t\tdispatch(actions.setWif(\"\"));\n\t\t\tactions.setBitcoinAddress(\"エラー発生\");\n\t\t}\n\t}, [dispatch]);\n};\n","import Bitcoin from \"./Bitcoin\";\n\nexport default Bitcoin;\n","import { Button } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useSelector } from \"../../redux/hooks\";\nimport { RootState } from \"../../redux/store\";\nimport { WordWrapP } from \"../Common/Styled\";\nimport { useBitcoinAddress } from \"./Bitcoin.hooks\";\n\nconst Bitcoin: React.VFC = () => {\n\tconst { bitcoinState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tonClick={useBitcoinAddress()}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\tビットコインアドレス生成\n\t\t\t</Button>\n\t\t\t<p>ビットコインアドレス(BASE58(P2PKH)形式)：</p>\n\t\t\t<WordWrapP>{bitcoinState.bitcoinAddress}</WordWrapP>\n\t\t\t{/* <p>ビットコインアドレス(BECH32(P2WPKH)形式)：</p>\n\t\t\t<WordWrapP>{bitcoinState.bitcoinAddressBECH32}</WordWrapP> */}\n\t\t\t<p>秘密鍵(WIF形式)：</p>\n\t\t\t<WordWrapP>{bitcoinState.wif}</WordWrapP>\n\t\t</>\n\t);\n};\n\nexport default Bitcoin;\n","/**\n * カラーコードの正規表現\n */\nconst HTMLColorCodeRegex = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n\n/**\n * #000000～#FFFFFFの中からランダムの色を返します\n *\n * @returns ランダムの色\n */\nconst getRandomColor = (): string =>\n\t`#${Math.floor(Math.random() * 16777216)\n\t\t.toString(16)\n\t\t.padStart(6, \"0\")}`;\n\n/**\n * HTML カラーコードが正しいかどうか判定します\n *\n * @returns 正しい\n */\nconst checkHTMLColor = (color: string): boolean =>\n\tHTMLColorCodeRegex.test(color);\n\nexport { getRandomColor, checkHTMLColor, HTMLColorCodeRegex };\n","import { useState } from \"react\";\n\n/**\n * フック\n *\n * @param カラーピッカーの初期色\n * @returns カラーピッカーを表示するかのフラグと、カラーピッカーのカラー保持用変数\n */\nexport const useShowColorPicker = (): {\n\tshowColorPicker: boolean;\n\tsetShowColorPicker: (showColorPicker: boolean) => void;\n} => {\n\tconst [showColorPicker, setShowColorPicker] = useState(false);\n\n\treturn { showColorPicker, setShowColorPicker };\n};\n","import styled from \"@emotion/styled\";\nimport {\n\tButton,\n\tCheckbox,\n\tDialog,\n\tFormControlLabel,\n\tPaper,\n\tTextField,\n\tTypography,\n} from \"@mui/material\";\nimport { SketchPicker } from \"react-color\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions as appActions } from \"../../redux/state/app\";\nimport { actions as countActions } from \"../../redux/state/count\";\nimport { actions as spinLogoActions } from \"../../redux/state/spinLogo\";\nimport { RootState } from \"../../redux/store\";\nimport {\n\tclearLocalStorage,\n\tloadLocalStorage,\n\tsaveLocalStorage,\n} from \"../../redux/thunk/localStorage\";\nimport { checkHTMLColor } from \"../../utils/HTMLUtils\";\nimport { DividedDiv } from \"../Common/Styled\";\nimport { useShowColorPicker } from \"./hooks\";\n\nconst GoodMarginTextField = styled(TextField)`\n\tmargin: 8px;\n`;\n\nconst NoMarginPaper = styled(Paper)`\n\tmargin: 0;\n\tmax-height: unset;\n\tmax-width: unset;\n`;\n\nconst ConfigPage: React.VFC = () => {\n\tconst { countState, spinLogoState, appState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\tconst { showColorPicker, setShowColorPicker } = useShowColorPicker();\n\tconst {\n\t\tshowColorPicker: showAppStateBackgroundColorPicker,\n\t\tsetShowColorPicker: setShowAppStateBackgroundColorColorPicker,\n\t} = useShowColorPicker();\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>設定</Typography>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>全体</Typography>\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\terror={!checkHTMLColor(appState.backgroundColor)}\n\t\t\t\t\tlabel=\"背景色\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(appActions.setBackgroundColor(element.currentTarget.value))\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => setShowAppStateBackgroundColorColorPicker(true)}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={appState.backgroundColor}\n\t\t\t\t/>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperComponent={NoMarginPaper}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetShowAppStateBackgroundColorColorPicker(false);\n\t\t\t\t\t}}\n\t\t\t\t\topen={showAppStateBackgroundColorPicker}\n\t\t\t\t>\n\t\t\t\t\t<SketchPicker\n\t\t\t\t\t\tcolor={appState.backgroundColor}\n\t\t\t\t\t\tonChange={(color) =>\n\t\t\t\t\t\t\tdispatch(appActions.setBackgroundColor(color.hex))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>ロゴまわし</Typography>\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\terror={!checkHTMLColor(spinLogoState.logoColor)}\n\t\t\t\t\tlabel=\"ロゴの色\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(spinLogoActions.setLogoColor(element.currentTarget.value))\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => setShowColorPicker(true)}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={spinLogoState.logoColor}\n\t\t\t\t/>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperComponent={NoMarginPaper}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetShowColorPicker(false);\n\t\t\t\t\t}}\n\t\t\t\t\topen={showColorPicker}\n\t\t\t\t>\n\t\t\t\t\t<SketchPicker\n\t\t\t\t\t\tcolor={spinLogoState.logoColor}\n\t\t\t\t\t\tonChange={(color) =>\n\t\t\t\t\t\t\tdispatch(spinLogoActions.setLogoColor(color.hex))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t\t<br />\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tchecked={spinLogoState.spin}\n\t\t\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tspinLogoActions.setSpinLogo(element.currentTarget.checked)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"まわっているかどうかフラグ\"\n\t\t\t\t/>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>カウントアップ</Typography>\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\tlabel=\"カウント\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(countActions.setCount(Number(element.currentTarget.value)))\n\t\t\t\t\t}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={countState.count}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<GoodMarginTextField\n\t\t\t\t\tlabel=\"パーセント\"\n\t\t\t\t\tonChange={(element) =>\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tcountActions.setShowingPercent(\n\t\t\t\t\t\t\t\tNumber(element.currentTarget.value)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={countState.percent}\n\t\t\t\t/>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>設定の保存と復元</Typography>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tdispatch(saveLocalStorage({ appState, spinLogoState, countState }))\n\t\t\t\t\t}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t設定の保存\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => dispatch(loadLocalStorage())}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t設定のロード\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\tonClick={() => dispatch(clearLocalStorage())}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t設定のクリア\n\t\t\t\t</Button>\n\t\t\t</DividedDiv>\n\t\t</>\n\t);\n};\n\nexport default ConfigPage;\n","import ConfigPage from \"./ConfigPage\";\n\nexport default ConfigPage;\n","import styled from \"@emotion/styled\";\nimport { Button, CircularProgress, Slider, Typography } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/count\";\nimport { RootState } from \"../../redux/store\";\nimport fetchLastCounter from \"../../redux/thunk/fetchCounter\";\n\n/** 良い幅のスライダー */\nconst GoodWidthSlider = styled(Slider)`\n\tmax-width: 50%;\n`;\n\nconst Count: React.VFC = () => {\n\tconst { countState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<p>{countState.count}</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.increment());\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t増やす\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.decrement());\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t減らす\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Typography id=\"percent-slider-label\">\n\t\t\t\t確率：{countState.percent}%\n\t\t\t</Typography>\n\t\t\t<GoodWidthSlider\n\t\t\t\taria-labelledby=\"percent-slider-label\"\n\t\t\t\tdisabled={countState.progress}\n\t\t\t\tmax={100}\n\t\t\t\tmin={0}\n\t\t\t\tonChange={(e, newValue) => {\n\t\t\t\t\tif (typeof newValue === \"number\") {\n\t\t\t\t\t\tdispatch(actions.setShowingPercent(newValue));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalue={countState.percent}\n\t\t\t\tvalueLabelDisplay=\"off\"\n\t\t\t/>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"info\"\n\t\t\t\t\tdisabled={countState.progress}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tfetchLastCounter({\n\t\t\t\t\t\t\t\tpercent: countState.percent,\n\t\t\t\t\t\t\t\tvalue: 100,\n\t\t\t\t\t\t\t\tsecond: 3,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t非同期\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Typography color=\"error\">{countState.message}</Typography>\n\t\t\t{countState.progress && <CircularProgress />}\n\t\t</>\n\t);\n};\n\nexport default Count;\n","import Count from \"./Count\";\n\nexport default Count;\n","import HelpPage from \"./HelpPage\";\n\nexport default HelpPage;\n","const HelpPage: React.VFC = () => (\n\t<>\n\t\t「\n\t\t<a href=\"https://github.com/nishidemasami/study-react\">\n\t\t\thttps://github.com/nishidemasami/study-react\n\t\t</a>\n\t\t」を参照して下さい\n\t</>\n);\n\nexport default HelpPage;\n","import SiteMap from \"./SiteMap\";\n\nexport default SiteMap;\n","import {\n\tBox,\n\tButton,\n\tCardActions,\n\tCardContent,\n\tTypography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { SitemapCard } from \"../Common/Styled\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst SiteMap: React.VFC = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Box sx={{ flexGrow: 1, overflow: \"hidden\", px: 3 }}>\n\t\t\t{menuList\n\t\t\t\t.map((menu) => ({ menu, site: MenuItems[menu] }))\n\t\t\t\t.map(({ menu, site }) => (\n\t\t\t\t\t<SitemapCard\n\t\t\t\t\t\tkey={site.name}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tminWidth: 275,\n\t\t\t\t\t\t\tmaxWidth: \"75%\",\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\tpx: 3,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\tsx={{ fontSize: 14 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tページ\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography component=\"div\" variant=\"h5\">\n\t\t\t\t\t\t\t\t{site.icon}\n\t\t\t\t\t\t\t\t{site.name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"body2\">{site.description}</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t{menu === \"siteMap\" ? null : (\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t移動\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</SitemapCard>\n\t\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default SiteMap;\n","import { keyframes } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { Button } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/spinLogo\";\nimport { RootState } from \"../../redux/store\";\nimport { getRandomColor } from \"../../utils/HTMLUtils\";\nimport { ReactComponent as Logo } from \"./logo.svg\";\n\n/** まわるLogoのプロパティ */\ntype RollingLogoProps = {\n\t/** まわるLogoの色 */\n\tlogoColor: string;\n};\n\n/** まわるLogoのkeyframes */\nconst RollingLogoKeyframes = keyframes`\n\tfrom {\n\t\ttransform: rotate(0deg);\n\t}\n\tto {\n\t\ttransform: rotate(360deg);\n\t}\n`;\n\n/** まわるLogo */\nconst RollingLogo = styled(Logo)<RollingLogoProps>`\n\theight: 40vmin;\n\tpointer-events: none;\n\n\t&[data-spinning=\"true\"] {\n\t\tanimation: ${RollingLogoKeyframes} infinite 1s linear;\n\t}\n\n\tfill: ${(props) => props.logoColor};\n`;\n\nconst SpinLogo: React.VFC = () => {\n\tconst { spinLogoState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\t<RollingLogo\n\t\t\t\t\tdata-spinning={spinLogoState.spin}\n\t\t\t\t\tlogoColor={spinLogoState.logoColor}\n\t\t\t\t/>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.setSpinLogo(!spinLogoState.spin));\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t{spinLogoState.spin ? \"止める\" : \"まわす\"}\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.setLogoColor(getRandomColor()));\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t色をランダムに変える\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t</>\n\t);\n};\n\nexport default SpinLogo;\n","import SpinLogo from \"./SpinLogo\";\n\nexport default SpinLogo;\n","import WelcomePage from \"./WelcomePage\";\n\nexport default WelcomePage;\n","import {\n\tBox,\n\tButton,\n\tCardActions,\n\tCardContent,\n\tTypography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { DividedDiv, SitemapCard } from \"../Common/Styled\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst WelcomePage: React.VFC = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>このページはReact練習用ページです。</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t左上のメニューボタン、もしくは以下の一覧から各機能を利用できます。\n\t\t\t\t</Typography>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>機能一覧</Typography>\n\n\t\t\t\t<Box sx={{ flexGrow: 1, overflow: \"hidden\", px: 3 }}>\n\t\t\t\t\t{menuList\n\t\t\t\t\t\t.map((menu) => ({ menu, site: MenuItems[menu] }))\n\t\t\t\t\t\t.map(({ menu, site }) => (\n\t\t\t\t\t\t\t<SitemapCard\n\t\t\t\t\t\t\t\tkey={site.name}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tminWidth: 275,\n\t\t\t\t\t\t\t\t\tmaxWidth: \"75%\",\n\t\t\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\t\t\tpx: 3,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: 14 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tページ\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography component=\"div\" variant=\"h5\">\n\t\t\t\t\t\t\t\t\t\t{site.icon}\n\t\t\t\t\t\t\t\t\t\t{site.name}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\">{site.description}</Typography>\n\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t{menu === \"welcomePage\" ? null : (\n\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(menu))}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t移動\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</SitemapCard>\n\t\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>\n\t\t\t\t\t詳しくは「\n\t\t\t\t\t<a href=\"https://github.com/nishidemasami/study-react\">\n\t\t\t\t\t\thttps://github.com/nishidemasami/study-react\n\t\t\t\t\t</a>\n\t\t\t\t\t」を参照して下さい。\n\t\t\t\t</Typography>\n\t\t\t</DividedDiv>\n\t\t</>\n\t);\n};\n\nexport default WelcomePage;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// webkit用Typescript型宣言\ndeclare global {\n\tinterface Window {\n\t\twebkitAudioContext: AudioContext;\n\t}\n}\n\n// Define a type for the slice state\nexport interface WhiteNoiseState {\n\t/** ボリューム */\n\tvolume: number;\n\t/** 再生中かどうかフラグ */\n\tplaying: boolean;\n}\n\n// Define the initial state using that type\nconst initialState: WhiteNoiseState = {\n\tvolume: 25,\n\tplaying: false,\n};\n\nconst whiteNoiseSlice = createSlice({\n\tname: \"whiteNoise\",\n\tinitialState,\n\treducers: {\n\t\tsetVolume: (state, action: PayloadAction<typeof state.volume>) => {\n\t\t\tstate.volume = action.payload;\n\t\t},\n\t\tsetPlaying: (state, action: PayloadAction<typeof state.playing>) => {\n\t\t\tstate.playing = action.payload;\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = whiteNoiseSlice;\n\nconst whiteNoiseReducer = whiteNoiseSlice.reducer;\nexport default whiteNoiseReducer;\n","import styled from \"@emotion/styled\";\nimport { VolumeDown, VolumeUp } from \"@mui/icons-material\";\nimport { Button, Slider } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/whiteNoise\";\nimport { RootState } from \"../../redux/store\";\n\n/** 良い幅のスライダー */\nconst GoodWidthSlider = styled(Slider)`\n\tmax-width: 50%;\n`;\n\nconst WhiteNoise: React.VFC = () => {\n\tconst { whiteNoiseState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\tconst [audioContext, setAudioContext] = React.useState<AudioContext>();\n\tconst [gainNode, setGainNode] = React.useState<GainNode>();\n\tconst [source, setSource] = React.useState<AudioBufferSourceNode>();\n\n\tReact.useEffect(() => {\n\t\tconst newAudioContext = new (window.AudioContext ||\n\t\t\twindow.webkitAudioContext)();\n\t\tsetAudioContext(newAudioContext);\n\t\tconst newGainNode = newAudioContext.createGain();\n\t\tsetGainNode(newGainNode);\n\n\t\treturn () => {\n\t\t\tdispatch(actions.setPlaying(false));\n\t\t\tif (source) {\n\t\t\t\tsource.stop();\n\t\t\t\tsource.buffer = null;\n\t\t\t}\n\t\t\tif (newAudioContext) {\n\t\t\t\tnewAudioContext.close();\n\t\t\t}\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onClickToStartAndStop = React.useCallback(() => {\n\t\tif (audioContext && gainNode) {\n\t\t\tif (whiteNoiseState.playing) {\n\t\t\t\t// 停止\n\t\t\t\tif (source) {\n\t\t\t\t\tsource.stop();\n\t\t\t\t\tsource.buffer = null; // メモリリーク防止\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// 再生\n\t\t\t\tconst channels = 1; // モノラル\n\t\t\t\tconst frameCount = audioContext.sampleRate * 2.0; // 2秒\n\n\t\t\t\tconst myArrayBuffer = audioContext.createBuffer(\n\t\t\t\t\tchannels,\n\t\t\t\t\tframeCount,\n\t\t\t\t\taudioContext.sampleRate\n\t\t\t\t);\n\n\t\t\t\tfor (let channel = 0; channel < channels; channel += 1) {\n\t\t\t\t\t// ホワイトノイズ生成\n\t\t\t\t\tconst nowBuffering = myArrayBuffer.getChannelData(channel);\n\t\t\t\t\tfor (let i = 0; i < frameCount; i += 1) {\n\t\t\t\t\t\tnowBuffering[i] = Math.random() * 2 - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgainNode.gain.value = whiteNoiseState.volume / 100;\n\n\t\t\t\tconst bufferSource = audioContext.createBufferSource();\n\t\t\t\tsetSource(bufferSource);\n\t\t\t\tbufferSource.buffer = myArrayBuffer;\n\t\t\t\tbufferSource.loop = true;\n\t\t\t\tbufferSource.connect(gainNode).connect(audioContext.destination);\n\t\t\t\tbufferSource.start();\n\t\t\t}\n\t\t\tdispatch(actions.setPlaying(!whiteNoiseState.playing));\n\t\t}\n\t}, [\n\t\taudioContext,\n\t\tgainNode,\n\t\twhiteNoiseState.playing,\n\t\twhiteNoiseState.volume,\n\t\tdispatch,\n\t\tsource,\n\t]);\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor={whiteNoiseState.playing ? \"warning\" : \"primary\"}\n\t\t\t\t\tonClick={onClickToStartAndStop}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\tホワイトノイズ{whiteNoiseState.playing ? \"停止\" : \"再生\"}\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<VolumeDown />\n\t\t\t\t<GoodWidthSlider\n\t\t\t\t\taria-labelledby=\"continuous-slider\"\n\t\t\t\t\tmax={100}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\tif (typeof newValue === \"number\") {\n\t\t\t\t\t\t\tdispatch(actions.setVolume(newValue));\n\t\t\t\t\t\t\tif (gainNode) {\n\t\t\t\t\t\t\t\tgainNode.gain.value = newValue / 100;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={whiteNoiseState.volume}\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t/>\n\t\t\t\t<VolumeUp />\n\t\t\t</p>\n\t\t</>\n\t);\n};\n\nexport default WhiteNoise;\n","import WhiteNoise from \"./WhiteNoise\";\n\nexport default WhiteNoise;\n","import {\n\tAudiotrack,\n\tAutorenew,\n\tHelp,\n\tHome,\n\tMap,\n\tPlusOne,\n\tSettings,\n\tToll,\n} from \"@mui/icons-material\";\nimport { menuComponents } from \"../../redux/state/app\";\nimport Bitcoin from \"../Bitcoin\";\nimport ConfigPage from \"../ConfigPage\";\nimport Count from \"../Count\";\nimport HelpPage from \"../HelpPage\";\nimport SiteMap from \"../SiteMap\";\nimport SpinLogo from \"../SpinLogo\";\nimport WelcomePage from \"../WelcomePage\";\nimport WhiteNoise from \"../WhiteNoise\";\n\n/**\n * メニューアイテム一覧\n */\nconst MenuItems: {\n\t[menu in menuComponents]: {\n\t\tcomponent: JSX.Element;\n\t\tname: string;\n\t\ticon: JSX.Element;\n\t\tdescription: React.ReactNode;\n\t};\n} = {\n\tcount: {\n\t\tcomponent: <Count />,\n\t\tname: \"カウントアップ\",\n\t\ticon: <PlusOne />,\n\t\tdescription: \"数を数えるページです。\",\n\t},\n\tspinLogo: {\n\t\tcomponent: <SpinLogo />,\n\t\tname: \"ロゴまわし\",\n\t\ticon: <Autorenew />,\n\t\tdescription: \"Reactのロゴをまわすページです。\",\n\t},\n\twhiteNoise: {\n\t\tcomponent: <WhiteNoise />,\n\t\tname: \"ホワイトノイズ再生\",\n\t\ticon: <Audiotrack />,\n\t\tdescription: \"ホワイトノイズを再生します。\",\n\t},\n\thelpPage: {\n\t\tcomponent: <HelpPage />,\n\t\tname: \"ヘルプ\",\n\t\ticon: <Help />,\n\t\tdescription: \"ヘルプページです。\",\n\t},\n\twelcomePage: {\n\t\tcomponent: <WelcomePage />,\n\t\tname: \"ようこそ\",\n\t\ticon: <Home />,\n\t\tdescription: (\n\t\t\t<>\n\t\t\t\t最初に表示されるページです。\n\t\t\t\t<br />\n\t\t\t\tデフォルトの初期ページです。\n\t\t\t</>\n\t\t),\n\t},\n\tconfigPage: {\n\t\tcomponent: <ConfigPage />,\n\t\tname: \"設定\",\n\t\ticon: <Settings />,\n\t\tdescription: \"Stateの値を直接変更するページです。\",\n\t},\n\tsiteMap: {\n\t\tcomponent: <SiteMap />,\n\t\tname: \"サイトマップ\",\n\t\ticon: <Map />,\n\t\tdescription: \"サイトマップです。\",\n\t},\n\tbitcoin: {\n\t\tcomponent: <Bitcoin />,\n\t\tname: \"ビットコイン\",\n\t\ticon: <Toll />,\n\t\tdescription: (\n\t\t\t<>\n\t\t\t\tビットコインアドレスを\n\t\t\t\t<br />\n\t\t\t\t生成するページです。\n\t\t\t</>\n\t\t),\n\t},\n};\n\nexport default MenuItems;\n","import AppBar from \"./AppBar\";\n\nexport default AppBar;\n","import { Home, Menu } from \"@mui/icons-material\";\nimport { AppBar, Box, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { RootState } from \"../../redux/store\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst AppBarComponent: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Box sx={{ flexGrow: 0 }}>\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={() => dispatch(actions.setOpenMenu(!appState.openMenu))}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tsx={{ mr: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography component=\"div\" sx={{ flexGrow: 1 }} variant=\"h6\">\n\t\t\t\t\t\t{appState.component && MenuItems[appState.component].name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={() => dispatch(actions.setComponent(menuList[0]))}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tsx={{ mr: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n};\n\nexport default AppBarComponent;\n","import Menu from \"./Menu\";\n\nexport default Menu;\n","import { Cancel } from \"@mui/icons-material\";\nimport {\n\tDivider,\n\tDrawer,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n} from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { RootState } from \"../../redux/store\";\nimport MenuItems from \"./MenuItems\";\n\nconst Menu: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Drawer\n\t\t\tanchor=\"left\"\n\t\t\tonClose={() => dispatch(actions.setOpenMenu(false))}\n\t\t\topen={appState.openMenu}\n\t\t>\n\t\t\t<div\n\t\t\t\tonKeyDown={() => dispatch(actions.setOpenMenu(false))}\n\t\t\t\trole=\"presentation\"\n\t\t\t>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(actions.setOpenMenu(false));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Cancel />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"閉じる\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<List>\n\t\t\t\t\t{menuList.map((menu) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tkey={menu}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdispatch(actions.setComponent(menu));\n\t\t\t\t\t\t\t\tdispatch(actions.setOpenMenu(false));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>{MenuItems[menu].icon}</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={MenuItems[menu].name} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</Drawer>\n\t);\n};\n\nexport default Menu;\n","import styled from \"@emotion/styled\";\nimport { Toolbar } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { RootState } from \"../../redux/store\";\nimport { init } from \"../../redux/thunk/app\";\nimport { saveLocalStorage } from \"../../redux/thunk/localStorage\";\nimport AppBar from \"../AppBar\";\nimport Menu from \"../Menu\";\nimport MenuItems from \"../Menu/MenuItems\";\n\n/** アプリケーションのdiv */\nconst AppDiv = styled.div`\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n\tp {\n\t\tmargin: 2px;\n\t}\n\ta {\n\t\tcolor: #004457;\n\t}\n`;\n\n/** メインコンテンツのプロパティ */\ntype MainContentsProps = {\n\t/** メインコンテンツの背景色 */\n\tbackgroundColor: string;\n};\n\n/** メインコンテンツ */\nconst MainContents = styled.div<MainContentsProps>`\n\twidth: 100%;\n\theight: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: calc(10px + 2vmin);\n\tcolor: black;\n\tbackground-color: ${(props) => props.backgroundColor};\n\tflex-grow: 1;\n`;\n\n/** Toolbar */\nconst MinToolbar = styled(Toolbar)`\n\tflex-grow: 0;\n\tpadding: 0;\n\tmargin: 0;\n`;\n\nconst App: React.VFC = () => {\n\tconst { appState, countState, spinLogoState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\tReact.useEffect(() => {\n\t\tdispatch(init());\n\t}, [dispatch]);\n\n\tReact.useEffect(() => {\n\t\tdispatch(saveLocalStorage({ appState, countState, spinLogoState }));\n\t}, [dispatch, appState, countState, spinLogoState]);\n\n\treturn (\n\t\t<React.StrictMode>\n\t\t\t<AppBar />\n\t\t\t<AppDiv>\n\t\t\t\t<MinToolbar />\n\t\t\t\t<MainContents backgroundColor={appState.backgroundColor}>\n\t\t\t\t\t{appState.component && MenuItems[appState.component].component}\n\t\t\t\t</MainContents>\n\t\t\t</AppDiv>\n\t\t\t<Menu />\n\t\t</React.StrictMode>\n\t);\n};\n\nexport default App;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { detectOSSimply } from \"../../utils/BrowserUtils\";\n\n// Define a type for the slice state\nexport interface CubeState {\n\t/** 絶対値 */\n\tabsolute: number;\n\t/** アルファ値 */\n\talpha: number;\n\t/** ベータ値 */\n\tbeta: number;\n\t/** ガンマ値 */\n\tgamma: number;\n\t/** 方角 */\n\tdegrees: number;\n\t/** デバイスの向きを取得することを許可されているかどうかフラグ */\n\tdeviceOrientationPermitted: boolean;\n}\n\n// Define the initial state using that type\nconst initialState: CubeState = {\n\tabsolute: 0,\n\talpha: 0,\n\tbeta: 0,\n\tgamma: 0,\n\tdegrees: 0,\n\tdeviceOrientationPermitted: detectOSSimply() !== \"iphone\",\n};\n\nconst cubeSlice = createSlice({\n\tname: \"count\",\n\tinitialState,\n\treducers: {\n\t\tsetAbsolute: (state, action: PayloadAction<typeof state.absolute>) => {\n\t\t\tstate.absolute = action.payload;\n\t\t},\n\t\tsetAlpha: (state, action: PayloadAction<typeof state.alpha>) => {\n\t\t\tstate.alpha = action.payload;\n\t\t},\n\t\tsetBeta: (state, action: PayloadAction<typeof state.beta>) => {\n\t\t\tstate.beta = action.payload;\n\t\t},\n\t\tsetGamma: (state, action: PayloadAction<typeof state.gamma>) => {\n\t\t\tstate.gamma = action.payload;\n\t\t},\n\t\tsetDegrees: (state, action: PayloadAction<typeof state.degrees>) => {\n\t\t\tstate.degrees = action.payload;\n\t\t},\n\t\tsetDeviceOrientationPermitted: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<typeof state.deviceOrientationPermitted>\n\t\t) => {\n\t\t\tstate.deviceOrientationPermitted = action.payload;\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = cubeSlice;\n\nconst cubeReducer = cubeSlice.reducer;\nexport default cubeReducer;\n","// 簡易OS判定\nexport function detectOSSimply(): \"iphone\" | \"android\" | \"pc\" {\n\tif (\n\t\tnavigator.userAgent.indexOf(\"iPhone\") > 0 ||\n\t\tnavigator.userAgent.indexOf(\"iPad\") > 0 ||\n\t\tnavigator.userAgent.indexOf(\"Macintosh\") > 0 ||\n\t\tnavigator.userAgent.indexOf(\"iPod\") > 0\n\t) {\n\t\treturn \"iphone\";\n\t}\n\tif (navigator.userAgent.indexOf(\"Android\") > 0) {\n\t\treturn \"android\";\n\t}\n\treturn \"pc\";\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReducer from \"./state/app\";\nimport bitcoinReducer from \"./state/bitcoin\";\nimport countReducer from \"./state/count\";\nimport cubeReducer from \"./state/cube\";\nimport spinLogoReducer from \"./state/spinLogo\";\nimport whiteNoiseReducer from \"./state/whiteNoise\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tappState: appReducer,\n\t\tbitcoinState: bitcoinReducer,\n\t\tcountState: countReducer,\n\t\tcubeState: cubeReducer,\n\t\tspinLogoState: spinLogoReducer,\n\t\twhiteNoiseState: whiteNoiseReducer,\n\t},\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}