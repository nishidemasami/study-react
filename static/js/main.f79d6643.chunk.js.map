{"version":3,"sources":["components/SpinLogo/logo.svg","redux/hooks.ts","redux/state/app.ts","redux/thunk/fetchCounter.ts","redux/state/count.ts","components/Count/Count.tsx","components/Count/index.ts","components/HelpPage/index.ts","components/HelpPage/HelpPage.tsx","redux/state/spinLogo.ts","components/SpinLogo/SpinLogo.tsx","components/SpinLogo/index.ts","utils/HTMLUtils.ts","components/WelcomePage/WelcomePage.tsx","components/WelcomePage/index.ts","components/Menu/MenuItems.tsx","components/AppBar/index.ts","components/AppBar/AppBar.tsx","components/Menu/index.ts","components/Menu/Menu.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["_g","useDispatch","dispatch","useSelector","selector","menuList","initialState","openMenu","component","appSlice","createSlice","name","reducers","setOpenMenu","state","action","payload","setComponent","actions","appReducer","reducer","judgment","percent","second","a","Promise","resolve","reject","setTimeout","Math","random","Error","fetchCounter","createAsyncThunk","arg","thunk","setProgress","catch","res","count","value","countSlice","message","progress","setShowingPercent","setMessasge","increment","decrement","incrementByAmount","extraReducers","builder","addCase","fetchLastCounter","pending","meta","fulfilled","rejected","countReducer","GoodWidthSlider","styled","Slider","Count","countState","shallowEqual","Button","color","onClick","variant","Typography","id","disabled","max","min","onChange","e","newValue","valueLabelDisplay","CircularProgress","HelpPage","href","spinLogoSlice","spin","logoColor","setSpinLogo","setLogoColor","spinLogoReducer","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","cx","cy","r","ForwardRef","RollingLogo","Logo","SpinLogo","spinLogoState","floor","DivLikeA","div","DividedDiv","WelcomePage","onKeyPress","role","tabIndex","MenuItems","icon","PlusOne","spinLogo","Autorenew","helpPage","Help","welcomePage","Home","AppBar","appState","Box","sx","flexGrow","position","Toolbar","IconButton","edge","size","mr","Menu","Drawer","anchor","onClose","open","onKeyDown","List","ListItem","button","ListItemIcon","Cancel","ListItemText","primary","Divider","map","menu","AppDiv","MainContents","App","StrictMode","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f79d6643.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.193714bf.svg\";\nexport { ForwardRef as ReactComponent };","import {\n\tTypedUseSelectorHook,\n\tuseDispatch as dispatch,\n\tuseSelector as selector,\n} from \"react-redux\";\nimport { RootState, store } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useDispatch = () => dispatch<typeof store.dispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n/** メニューリスト */\nexport const menuList = [\n\t\"welcomePage\",\n\t\"count\",\n\t\"spinLogo\",\n\t\"helpPage\",\n] as const;\n\n/** メニュー一覧タイプ */\nexport type menuComponents = typeof menuList[number];\n\n// Define a type for the slice state\ninterface AppState {\n\t/** メニューを表示するかどうか */\n\topenMenu: boolean;\n\t/** 表示するコンポーネント */\n\tcomponent: menuComponents;\n}\n\n// Define the initial state using that type\nconst initialState: AppState = {\n\topenMenu: false,\n\tcomponent: menuList[0],\n};\n\nconst appSlice = createSlice({\n\tname: \"app\",\n\tinitialState,\n\treducers: {\n\t\tsetOpenMenu: (state, action: PayloadAction<typeof state.openMenu>) => {\n\t\t\tstate.openMenu = action.payload;\n\t\t},\n\t\tsetComponent: (state, action: PayloadAction<typeof state.component>) => {\n\t\t\tstate.component = action.payload;\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = appSlice;\n\nconst appReducer = appSlice.reducer;\nexport default appReducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { actions } from \"../state/count\";\n\n/**\n * 遅延判定メソッド\n * @param percent 確率\n * @param second 秒数\n * @remarks\n * second秒後にpercent%の確率でtrueを返し、\n * でなければrejectする\n */\nconst judgment = async (percent: number, second: number) =>\n\tnew Promise<boolean>((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tif (Math.random() < percent / 100) {\n\t\t\t\tresolve(true);\n\t\t\t}\n\t\t\treject(new Error());\n\t\t}, second * 1000);\n\t});\n\ntype fetchCounterArgType = {\n\t/** 増える確率 */\n\tpercent: number;\n\t/** 秒数 */\n\tsecond: number;\n\t/** 値 */\n\tvalue: number;\n};\n\ntype fetchCounterReturnType = {\n\t/** 増減値 */\n\tcount: number;\n};\n\n/**\n * 遅延増減メソッド\n * @remarks\n * 渡された秒数後に渡された確率で渡された値を返し、\n * でなければ例外を返す\n */\nconst fetchCounter = createAsyncThunk<\n\tfetchCounterReturnType,\n\tfetchCounterArgType\n>(\"lastcount/fetch\", async (arg, thunk): Promise<fetchCounterReturnType> => {\n\tthunk.dispatch(actions.setProgress(true));\n\n\tconst res = await judgment(arg.percent, arg.second).catch(() => false);\n\n\tthunk.dispatch(actions.setProgress(false));\n\n\tif (res) {\n\t\treturn { count: arg.value };\n\t}\n\n\tthrow new Error(\"fetch count error\");\n});\n\nexport default fetchCounter;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport fetchLastCounter from \"../thunk/fetchCounter\";\n\n// Define a type for the slice state\ninterface CounterState {\n\t/** 表示するメッセージ */\n\tmessage: string;\n\t/** プログレスフラグ */\n\tprogress: boolean;\n\t/** カウント値 */\n\tcount: number;\n\t/** 確率 */\n\tpercent: number;\n}\n\n// Define the initial state using that type\nconst initialState: CounterState = {\n\tmessage: \"\",\n\tprogress: false,\n\tcount: 0,\n\tpercent: 50,\n};\nconst countSlice = createSlice({\n\tname: \"count\",\n\tinitialState,\n\treducers: {\n\t\t/** 確率を設定する */\n\t\tsetShowingPercent: (state, action: PayloadAction<number>) => {\n\t\t\tstate.percent = action.payload;\n\t\t},\n\t\tsetProgress: (state, action: PayloadAction<boolean>) => {\n\t\t\tstate.progress = action.payload;\n\t\t},\n\t\tsetMessasge: (state, action: PayloadAction<string>) => {\n\t\t\tstate.message = action.payload;\n\t\t},\n\t\tincrement: (state) => {\n\t\t\tstate.count += 1;\n\t\t},\n\t\tdecrement: (state) => {\n\t\t\tstate.count -= 1;\n\t\t},\n\t\tincrementByAmount: (state, action: PayloadAction<number>) => {\n\t\t\tstate.count += action.payload;\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(fetchLastCounter.pending, (state, action) => ({\n\t\t\t...state,\n\t\t\tmessage: `判定中です。${action.meta.arg.second}秒後に${action.meta.arg.percent}%の確率で${action.meta.arg.value}増えます。`,\n\t\t}));\n\t\tbuilder.addCase(fetchLastCounter.fulfilled, (state, action) => ({\n\t\t\t...state,\n\t\t\tcount: state.count + action.payload.count,\n\t\t\tmessage: `判定に成功しました。${action.payload.count}増えました。`,\n\t\t}));\n\t\tbuilder.addCase(fetchLastCounter.rejected, (state) => ({\n\t\t\t...state,\n\t\t\tmessage: \"判定に失敗しました。1減りました。\",\n\t\t\tcount: state.count - 1,\n\t\t}));\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = countSlice;\n\nconst countReducer = countSlice.reducer;\nexport default countReducer;\n","import { Button, CircularProgress, Slider, Typography } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/count\";\nimport { RootState } from \"../../redux/store\";\nimport fetchLastCounter from \"../../redux/thunk/fetchCounter\";\n\n/** 良い幅のスライダー */\nconst GoodWidthSlider = styled(Slider)`\n\tmax-width: 50%;\n`;\n\nconst Count: React.VFC = () => {\n\tconst { countState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<p>{countState.count}</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.increment());\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t増やす\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.decrement());\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t減らす\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Typography id=\"percent-slider-label\">\n\t\t\t\t確率：{countState.percent}%\n\t\t\t</Typography>\n\t\t\t<GoodWidthSlider\n\t\t\t\taria-labelledby=\"percent-slider-label\"\n\t\t\t\tdisabled={countState.progress}\n\t\t\t\tmax={100}\n\t\t\t\tmin={0}\n\t\t\t\tonChange={(e, newValue) => {\n\t\t\t\t\tif (typeof newValue === \"number\") {\n\t\t\t\t\t\tdispatch(actions.setShowingPercent(newValue));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalue={countState.percent}\n\t\t\t\tvalueLabelDisplay=\"off\"\n\t\t\t/>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"info\"\n\t\t\t\t\tdisabled={countState.progress}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tfetchLastCounter({\n\t\t\t\t\t\t\t\tpercent: countState.percent,\n\t\t\t\t\t\t\t\tvalue: 100,\n\t\t\t\t\t\t\t\tsecond: 3,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t非同期\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<Typography color=\"error\">{countState.message}</Typography>\n\t\t\t{countState.progress && <CircularProgress />}\n\t\t</>\n\t);\n};\n\nexport default Count;\n","import Count from \"./Count\";\n\nexport default Count;\n","import HelpPage from \"./HelpPage\";\n\nexport default HelpPage;\n","const HelpPage: React.VFC = () => (\n\t<>\n\t\t「\n\t\t<a href=\"https://github.com/nishidemasami/study-react\">\n\t\t\thttps://github.com/nishidemasami/study-react\n\t\t</a>\n\t\t」を参照して下さい\n\t</>\n);\n\nexport default HelpPage;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// Define a type for the slice state\ninterface SpinLogoState {\n\t/** ロゴ回転フラグ */\n\tspin: boolean;\n\t/** ロゴの色 */\n\tlogoColor: string;\n}\n\n// Define the initial state using that type\nconst initialState: SpinLogoState = {\n\tspin: false,\n\tlogoColor: \"#61DAFB\",\n};\nconst spinLogoSlice = createSlice({\n\tname: \"spinLogo\",\n\tinitialState,\n\treducers: {\n\t\tsetSpinLogo: (state, action: PayloadAction<typeof state.spin>) => {\n\t\t\tstate.spin = action.payload;\n\t\t},\n\t\tsetLogoColor: (state, action: PayloadAction<typeof state.logoColor>) => {\n\t\t\tstate.logoColor = action.payload;\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { actions } = spinLogoSlice;\n\nconst spinLogoReducer = spinLogoSlice.reducer;\nexport default spinLogoReducer;\n","import { Button } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/spinLogo\";\nimport { RootState } from \"../../redux/store\";\nimport { getRandomColor } from \"../../utils/HTMLUtils\";\nimport { ReactComponent as Logo } from \"./logo.svg\";\n\n/** まわるLogoのプロパティ */\ntype RollingLogoProps = {\n\t/** まわるLogoの色 */\n\tlogoColor: string;\n};\n\n/** まわるLogo */\nconst RollingLogo = styled(Logo)<RollingLogoProps>`\n\theight: 40vmin;\n\tpointer-events: none;\n\n\t&[data-spinning=\"true\"] {\n\t\tanimation: App-logo-spin infinite 1s linear;\n\t}\n\n\tfill: ${(props) => props.logoColor};\n\n\t@keyframes App-logo-spin {\n\t\tfrom {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\tto {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n`;\n\nconst SpinLogo: React.VFC = () => {\n\tconst { spinLogoState } = useSelector(\n\t\t(state: RootState) => state,\n\t\tshallowEqual\n\t);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\t<RollingLogo\n\t\t\t\t\tdata-spinning={spinLogoState.spin}\n\t\t\t\t\tlogoColor={spinLogoState.logoColor}\n\t\t\t\t/>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.setSpinLogo(!spinLogoState.spin));\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t{spinLogoState.spin ? \"止める\" : \"まわす\"}\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(actions.setLogoColor(getRandomColor()));\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t色をランダムに変える\n\t\t\t\t</Button>\n\t\t\t</p>\n\t\t</>\n\t);\n};\n\nexport default SpinLogo;\n","import SpinLogo from \"./SpinLogo\";\n\nexport default SpinLogo;\n","/**\n * rgb(0,0,0)～rgb(255,255,255)の中からランダムの色を返します\n *\n * @returns ランダムの色\n */\nexport const getRandomColor: () => string = (): string =>\n\t`rgb(${Math.floor(Math.random() * 256)},${Math.floor(\n\t\tMath.random() * 256\n\t)},${Math.floor(Math.random() * 256)})`;\n","import { Typography } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/app\";\n\nconst DivLikeA = styled.div`\n\tcursor: pointer;\n\ttext-decoration: underline;\n`;\n\nconst DividedDiv = styled.div`\n\tborder-top: 1px solid rgba(0, 0, 0, 0.12);\n`;\n\nconst WelcomePage: React.VFC = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>このページはReact練習用ページです。</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t左上のメニューボタン、もしくは以下の一覧から各機能を利用できます。\n\t\t\t\t</Typography>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>機能一覧</Typography>\n\t\t\t\t<DivLikeA\n\t\t\t\t\tonClick={() => dispatch(actions.setComponent(\"count\"))}\n\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(\"count\"))}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t>\n\t\t\t\t\t<Typography>カウント</Typography>\n\t\t\t\t</DivLikeA>\n\t\t\t\t<DivLikeA\n\t\t\t\t\tonClick={() => dispatch(actions.setComponent(\"spinLogo\"))}\n\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(\"spinLogo\"))}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t>\n\t\t\t\t\t<Typography>ロゴまわし</Typography>\n\t\t\t\t</DivLikeA>\n\t\t\t\t<DivLikeA\n\t\t\t\t\tonClick={() => dispatch(actions.setComponent(\"helpPage\"))}\n\t\t\t\t\tonKeyPress={() => dispatch(actions.setComponent(\"helpPage\"))}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t>\n\t\t\t\t\t<Typography>ヘルプ</Typography>\n\t\t\t\t</DivLikeA>\n\t\t\t</DividedDiv>\n\t\t\t<DividedDiv>\n\t\t\t\t<Typography>\n\t\t\t\t\t詳しくは「\n\t\t\t\t\t<a href=\"https://github.com/nishidemasami/study-react\">\n\t\t\t\t\t\thttps://github.com/nishidemasami/study-react\n\t\t\t\t\t</a>\n\t\t\t\t\t」を参照して下さい。\n\t\t\t\t</Typography>\n\t\t\t</DividedDiv>\n\t\t</>\n\t);\n};\n\nexport default WelcomePage;\n","import WelcomePage from \"./WelcomePage\";\n\nexport default WelcomePage;\n","import { Autorenew, Help, Home, PlusOne } from \"@mui/icons-material\";\nimport { menuComponents } from \"../../redux/state/app\";\nimport Count from \"../Count\";\nimport HelpPage from \"../HelpPage\";\nimport SpinLogo from \"../SpinLogo\";\nimport WelcomePage from \"../WelcomePage\";\n\n/**\n * メニューアイテム一覧\n */\nconst MenuItems: {\n\t[menu in menuComponents]: {\n\t\tcomponent: JSX.Element;\n\t\tname: string;\n\t\ticon: JSX.Element;\n\t};\n} = {\n\tcount: {\n\t\tcomponent: <Count />,\n\t\tname: \"カウントアップ\",\n\t\ticon: <PlusOne />,\n\t},\n\tspinLogo: {\n\t\tcomponent: <SpinLogo />,\n\t\tname: \"ロゴまわし\",\n\t\ticon: <Autorenew />,\n\t},\n\thelpPage: {\n\t\tcomponent: <HelpPage />,\n\t\tname: \"ヘルプ\",\n\t\ticon: <Help />,\n\t},\n\twelcomePage: {\n\t\tcomponent: <WelcomePage />,\n\t\tname: \"ようこそ\",\n\t\ticon: <Home />,\n\t},\n};\n\nexport default MenuItems;\n","import AppBar from \"./AppBar\";\n\nexport default AppBar;\n","import { Menu } from \"@mui/icons-material\";\nimport { AppBar, Box, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions } from \"../../redux/state/app\";\nimport { RootState } from \"../../redux/store\";\nimport MenuItems from \"../Menu/MenuItems\";\n\nconst AppBarComponent: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={() => dispatch(actions.setOpenMenu(!appState.openMenu))}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tsx={{ mr: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography component=\"div\" sx={{ flexGrow: 1 }} variant=\"h6\">\n\t\t\t\t\t\t{MenuItems[appState.component].name}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n};\n\nexport default AppBarComponent;\n","import Menu from \"./Menu\";\n\nexport default Menu;\n","import { Cancel } from \"@mui/icons-material\";\nimport {\n\tDivider,\n\tDrawer,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n} from \"@mui/material\";\nimport { shallowEqual } from \"react-redux\";\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\nimport { actions, menuList } from \"../../redux/state/app\";\nimport { RootState } from \"../../redux/store\";\nimport MenuItems from \"./MenuItems\";\n\nconst Menu: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Drawer\n\t\t\tanchor=\"left\"\n\t\t\tonClose={() => dispatch(actions.setOpenMenu(false))}\n\t\t\topen={appState.openMenu}\n\t\t>\n\t\t\t<div\n\t\t\t\tonKeyDown={() => dispatch(actions.setOpenMenu(false))}\n\t\t\t\trole=\"presentation\"\n\t\t\t>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(actions.setOpenMenu(false));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Cancel />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"閉じる\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<List>\n\t\t\t\t\t{menuList.map((menu) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tkey={menu}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdispatch(actions.setComponent(menu));\n\t\t\t\t\t\t\t\tdispatch(actions.setOpenMenu(false));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>{MenuItems[menu].icon}</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={MenuItems[menu].name} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</Drawer>\n\t);\n};\n\nexport default Menu;\n","import { Toolbar } from \"@mui/material\";\nimport React from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport styled from \"styled-components\";\nimport AppBar from \"./components/AppBar\";\nimport Menu from \"./components/Menu\";\nimport MenuItems from \"./components/Menu/MenuItems\";\nimport { useSelector } from \"./redux/hooks\";\nimport { RootState } from \"./redux/store\";\n\n/** アプリケーションのdiv */\nconst AppDiv = styled.div`\n\ttext-align: center;\n\tp {\n\t\tmargin: 2px;\n\t}\n\ta {\n\t\tcolor: #004457;\n\t}\n`;\n\n/** メインコンテンツ */\nconst MainContents = styled.div`\n\tposition: absolute;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: calc(10px + 2vmin);\n\tcolor: black;\n`;\n\nconst App: React.VFC = () => {\n\tconst { appState } = useSelector((state: RootState) => state, shallowEqual);\n\treturn (\n\t\t<React.StrictMode>\n\t\t\t<AppBar />\n\t\t\t<AppDiv>\n\t\t\t\t<Toolbar />\n\t\t\t\t<MainContents>{MenuItems[appState.component].component}</MainContents>\n\t\t\t</AppDiv>\n\t\t\t<Menu />\n\t\t</React.StrictMode>\n\t);\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReducer from \"./state/app\";\nimport countReducer from \"./state/count\";\nimport spinLogoReducer from \"./state/spinLogo\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tcountState: countReducer,\n\t\tappState: appReducer,\n\t\tspinLogoState: spinLogoReducer,\n\t},\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}